{"version":3,"file":"alpine.js","sources":["../src/utils.js","../src/directives/for.js","../src/directives/bind.js","../src/directives/on.js","../src/directives/model.js","../src/component.js","../src/directives/show.js","../src/directives/if.js","../src/index.js"],"sourcesContent":["\n// Thanks @stimulus:\n// https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\nexport function domReady() {\n    return new Promise(resolve => {\n        if (document.readyState == \"loading\") {\n            document.addEventListener(\"DOMContentLoaded\", resolve)\n        } else {\n            resolve()\n        }\n    })\n}\n\nexport function arrayUnique(array) {\n    var a = array.concat();\n    for(var i=0; i<a.length; ++i) {\n        for(var j=i+1; j<a.length; ++j) {\n            if(a[i] === a[j])\n                a.splice(j--, 1);\n        }\n    }\n\n    return a;\n}\n\nexport function isTesting() {\n    return navigator.userAgent, navigator.userAgent.includes(\"Node.js\")\n        || navigator.userAgent.includes(\"jsdom\")\n}\n\nexport function kebabCase(subject) {\n    return subject.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[_\\s]/, '-').toLowerCase()\n}\n\nexport function walk(el, callback) {\n    if (callback(el) === false) return\n\n    let node = el.firstElementChild\n\n    while (node) {\n        walk(node, callback)\n\n        node = node.nextElementSibling\n    }\n}\n\nexport function debounce(func, wait) {\n    var timeout\n    return function () {\n        var context = this, args = arguments\n        var later = function () {\n            timeout = null\n            func.apply(context, args)\n        }\n        clearTimeout(timeout)\n        timeout = setTimeout(later, wait)\n    }\n}\n\nexport function saferEval(expression, dataContext, additionalHelperVariables = {}) {\n    return (new Function(['$data', '$extraVars'], `var result; with($extraVars) { with($data) { result = ${expression} } }; return result`))(\n        dataContext, additionalHelperVariables\n    )\n}\n\nexport function saferEvalNoReturn(expression, dataContext, additionalHelperVariables = {}) {\n    return (new Function(['$data', '$extraVars'], `with($extraVars) { with($data) { ${expression} } }`))(\n        dataContext, additionalHelperVariables\n    )\n}\n\nexport function isXAttr(attr) {\n    const name = replaceAtAndColonWithStandardSyntax(attr.name)\n\n    const xAttrRE = /x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref)/\n\n    return xAttrRE.test(name)\n}\n\nexport function getXAttrs(el, type) {\n    return Array.from(el.attributes)\n        .filter(isXAttr)\n        .map(attr => {\n            const name = replaceAtAndColonWithStandardSyntax(attr.name)\n\n            const typeMatch = name.match(/x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref)/)\n            const valueMatch = name.match(/:([a-zA-Z\\-:]+)/)\n            const modifiers = name.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || []\n\n            return {\n                type: typeMatch ? typeMatch[1] : null,\n                value: valueMatch ? valueMatch[1] : null,\n                modifiers: modifiers.map(i => i.replace('.', '')),\n                expression: attr.value,\n            }\n        })\n        .filter(i => {\n            // If no type is passed in for filtering, bypassfilter\n            if (! type) return true\n\n            return i.type === type\n        })\n}\n\nexport function replaceAtAndColonWithStandardSyntax(name) {\n    if (name.startsWith('@')) {\n        return name.replace('@', 'x-on:')\n    } else if (name.startsWith(':')) {\n        return name.replace(':', 'x-bind:')\n    }\n\n    return name\n}\n\nexport function transitionIn(el, callback, forceSkip = false) {\n    if (forceSkip) return callback()\n\n    const attrs = getXAttrs(el, 'transition')\n\n    if (attrs.length < 1) return callback()\n\n    const enter = (attrs.find(i => i.value === 'enter') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const enterStart = (attrs.find(i => i.value === 'enter-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const enterEnd = (attrs.find(i => i.value === 'enter-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n\n    transition(el, enter, enterStart, enterEnd, callback, () => {})\n}\n\nexport function transitionOut(el, callback, forceSkip = false) {\n    if (forceSkip) return callback()\n\n    const attrs = getXAttrs(el, 'transition')\n\n    if (attrs.length < 1) return callback()\n\n    const leave = (attrs.find(i => i.value === 'leave') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const leaveStart = (attrs.find(i => i.value === 'leave-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const leaveEnd = (attrs.find(i => i.value === 'leave-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n\n    transition(el, leave, leaveStart, leaveEnd, () => {}, callback)\n}\n\nexport function transition(el, classesDuring, classesStart, classesEnd, hook1, hook2) {\n    const originalClasses = el.__x_original_classes || []\n    el.classList.add(...classesStart)\n    el.classList.add(...classesDuring)\n\n    requestAnimationFrame(() => {\n        const duration = Number(getComputedStyle(el).transitionDuration.replace('s', '')) * 1000\n\n        hook1()\n\n        requestAnimationFrame(() => {\n            // Don't remove classes that were in the original class attribute.\n            el.classList.remove(...classesStart.filter(i => !originalClasses.includes(i)))\n            el.classList.add(...classesEnd)\n\n            setTimeout(() => {\n                hook2()\n\n                // Adding an \"isConnected\" check, in case the callback\n                // removed the element from the DOM.\n                if (el.isConnected) {\n                    el.classList.remove(...classesDuring.filter(i => !originalClasses.includes(i)))\n                    el.classList.remove(...classesEnd.filter(i => !originalClasses.includes(i)))\n                }\n            }, duration);\n        })\n    });\n}\n\nexport function deepProxy(target, proxyHandler) {\n    // If target is null, return it.\n    if (target === null) return target;\n\n    // If target is not an object, return it.\n    if (typeof target !== 'object') return target;\n\n    // If target is a DOM node (like in the case of this.$el), return it.\n    if (target instanceof Node) return target\n\n    // If target is already an Alpine proxy, return it.\n    if (target['$isAlpineProxy']) return target;\n\n    // Otherwise proxy the properties recursively.\n    // This enables reactivity on setting nested data.\n    // Note that if a project is not a valid object, it won't be converted to a proxy\n    for (let property in target) {\n        target[property] = deepProxy(target[property], proxyHandler)\n    }\n\n    return new Proxy(target, proxyHandler)\n}\n","import { transitionIn, transitionOut, getXAttrs } from '../utils'\n\nexport function handleForDirective(component, el, expression, initialUpdate) {\n    const { single, bunch, iterator1, iterator2 } = parseFor(expression)\n\n    var items = component.evaluateReturnExpression(el, bunch)\n\n    // As we walk the array, we'll also walk the DOM (updating/creating as we go).\n    var previousEl = el\n    items.forEach((i, index, group) => {\n        const currentKey = getThisIterationsKeyFromTemplateTag(component, el, single, iterator1, iterator2, i, index, group)\n        let currentEl = previousEl.nextElementSibling\n\n        // Let's check and see if the x-for has already generated an element last time it ran.\n        if (currentEl && currentEl.__x_for_key !== undefined) {\n            // If the the key's don't match.\n            if (currentEl.__x_for_key !== currentKey) {\n                // We'll look ahead to see if we can find it further down.\n                var tmpCurrentEl = currentEl\n                while(tmpCurrentEl) {\n                    // If we found it later in the DOM.\n                    if (tmpCurrentEl.__x_for_key === currentKey) {\n                        // Move it to where it's supposed to be in the DOM.\n                        el.parentElement.insertBefore(tmpCurrentEl, currentEl)\n                        // And set it as the current element as if we just created it.\n                        currentEl = tmpCurrentEl\n                        break\n                    }\n\n                    tmpCurrentEl = (tmpCurrentEl.nextElementSibling && tmpCurrentEl.nextElementSibling.__x_for_key !== undefined) ? tmpCurrentEl.nextElementSibling : false\n                }\n            }\n\n            // Temporarily remove the key indicator to allow the normal \"updateElements\" to work\n            delete currentEl.__x_for_key\n\n            currentEl.__x_for_alias = single\n            currentEl.__x_for_value = i\n            var extraVars = {}\n            Object.defineProperty(extraVars, currentEl.__x_for_alias, {\n                get() {\n                    return currentEl.__x_for_value\n                },\n                set(newValue) {\n                    group[index] = newValue\n                },\n                configurable: true\n            })\n            component.updateElements(currentEl, () => extraVars)\n        } else {\n            // There are no more .__x_for_key elements, meaning the page is first loading, OR, there are\n            // extra items in the array that need to be added as new elements.\n\n            // Let's create a clone from the template.\n            const clone = document.importNode(el.content, true);\n            // Insert it where we are in the DOM.\n            el.parentElement.insertBefore(clone, currentEl)\n\n            // Set it as the current element.\n            currentEl = previousEl.nextElementSibling\n\n            // And transition it in if it's not the first page load.\n            transitionIn(currentEl, () => {}, initialUpdate)\n\n            // Now, let's walk the new DOM node and initialize everything,\n            // including new nested components.\n            // Note we are resolving the \"extraData\" alias stuff from the dom element value so that it's\n            // always up to date for listener handlers that don't get re-registered.\n            currentEl.__x_for_alias = single\n            currentEl.__x_for_value = i\n            var extraVars = {}\n            Object.defineProperty(extraVars, currentEl.__x_for_alias, {\n                get() {\n                    return currentEl.__x_for_value\n                },\n                set(newValue) {\n                    group[index] = newValue\n                },\n                configurable: true\n            })\n            component.initializeElements(currentEl, () => extraVars)\n        }\n\n        currentEl.__x_for_key = currentKey\n\n        previousEl = currentEl\n    })\n\n    // Now that we've added/updated/moved all the elements for the current state of the loop.\n    // Anything left over, we can get rid of.\n    var nextElementFromOldLoop = (previousEl.nextElementSibling && previousEl.nextElementSibling.__x_for_key !== undefined) ? previousEl.nextElementSibling : false\n\n    while(nextElementFromOldLoop) {\n        const nextElementFromOldLoopImmutable = nextElementFromOldLoop\n        const nextSibling = nextElementFromOldLoop.nextElementSibling\n\n        transitionOut(nextElementFromOldLoop, () => {\n            nextElementFromOldLoopImmutable.remove()\n        })\n\n        nextElementFromOldLoop = (nextSibling && nextSibling.__x_for_key !== undefined) ? nextSibling : false\n    }\n}\n\n// This was taken from VueJS 2.* core. Thanks Vue!\nfunction parseFor (expression) {\n    const forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/\n    const stripParensRE = /^\\(|\\)$/g\n    const forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/\n\n    const inMatch = expression.match(forAliasRE)\n    if (! inMatch) return\n    const res = {}\n    res.bunch = inMatch[2].trim()\n    const single = inMatch[1].trim().replace(stripParensRE, '')\n    const iteratorMatch = single.match(forIteratorRE)\n    if (iteratorMatch) {\n        res.single = single.replace(forIteratorRE, '').trim()\n        res.iterator1 = iteratorMatch[1].trim()\n        if (iteratorMatch[2]) {\n            res.iterator2 = iteratorMatch[2].trim()\n        }\n    } else {\n        res.single = single\n    }\n    return res\n  }\n\nfunction getThisIterationsKeyFromTemplateTag(component, el, single, iterator1, iterator2, i, index, group) {\n    const keyAttr = getXAttrs(el, 'bind').filter(attr => attr.value === 'key')[0]\n\n    let keyAliases = { [single]: i }\n    if (iterator1) keyAliases[iterator1] = index\n    if (iterator2) keyAliases[iterator2] = group\n\n    return keyAttr\n        ? component.evaluateReturnExpression(el, keyAttr.expression, () => keyAliases)\n        : index\n}\n","import { arrayUnique } from '../utils'\n\nexport function handleAttributeBindingDirective(component, el, attrName, expression, extraVars) {\n    var value = component.evaluateReturnExpression(el, expression, extraVars)\n\n    if (attrName === 'value') {\n        // If nested model key is undefined, set the default value to empty string.\n        if (value === undefined && expression.match(/\\./).length) {\n            value = ''\n        }\n\n        if (el.type === 'radio') {\n            el.checked = el.value == value\n        } else if (el.type === 'checkbox') {\n            if (Array.isArray(value)) {\n                // I'm purposely not using Array.includes here because it's\n                // strict, and because of Numeric/String mis-casting, I\n                // want the \"includes\" to be \"fuzzy\".\n                let valueFound = false\n                value.forEach(val => {\n                    if (val == el.value) {\n                        valueFound = true\n                    }\n                })\n\n                el.checked = valueFound\n            } else {\n                el.checked = !! value\n            }\n        } else if (el.tagName === 'SELECT') {\n            updateSelect(el, value)\n        } else {\n            el.value = value\n        }\n    } else if (attrName === 'class') {\n        if (Array.isArray(value)) {\n            const originalClasses = el.__x_original_classes || []\n            el.setAttribute('class', arrayUnique(originalClasses.concat(value)).join(' '))\n        } else if (typeof value === 'object') {\n            Object.keys(value).forEach(classNames => {\n                if (value[classNames]) {\n                    classNames.split(' ').forEach(className => el.classList.add(className))\n                } else {\n                    classNames.split(' ').forEach(className => el.classList.remove(className))\n                }\n            })\n        } else {\n            const originalClasses = el.__x_original_classes || []\n            const newClasses = value.split(' ')\n            el.setAttribute('class', arrayUnique(originalClasses.concat(newClasses)).join(' '))\n        }\n    } else if (['disabled', 'readonly', 'required', 'checked', 'hidden', 'selected'].includes(attrName)) {\n        // Boolean attributes have to be explicitly added and removed, not just set.\n        if (!! value) {\n            el.setAttribute(attrName, '')\n        } else {\n            el.removeAttribute(attrName)\n        }\n    } else {\n        el.setAttribute(attrName, value)\n    }\n}\n\nfunction updateSelect(el, value) {\n    const arrayWrappedValue = [].concat(value).map(value => { return value + '' })\n\n    Array.from(el.options).forEach(option => {\n        option.selected = arrayWrappedValue.includes(option.value || option.text)\n    })\n}\n","import { kebabCase } from '../utils'\n\nexport function registerListener(component, el, event, modifiers, expression, extraVars = {}) {\n    if (modifiers.includes('away')) {\n        const handler = e => {\n            // Don't do anything if the click came form the element or within it.\n            if (el.contains(e.target)) return\n\n            // Don't do anything if this element isn't currently visible.\n            if (el.offsetWidth < 1 && el.offsetHeight < 1) return\n\n            // Now that we are sure the element is visible, AND the click\n            // is from outside it, let's run the expression.\n            runListenerHandler(component, expression, e, extraVars)\n\n            if (modifiers.includes('once')) {\n                document.removeEventListener(event, handler)\n            }\n        }\n\n        // Listen for this event at the root level.\n        document.addEventListener(event, handler)\n    } else {\n        const listenerTarget = modifiers.includes('window')\n            ? window : (modifiers.includes('document') ? document : el)\n\n        const handler = e => {\n            if (isKeyEvent(event)) {\n                if (isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers)) {\n                    return\n                }\n            }\n\n            if (modifiers.includes('prevent')) e.preventDefault()\n            if (modifiers.includes('stop')) e.stopPropagation()\n\n            const returnValue = runListenerHandler(component, expression, e, extraVars)\n\n            if (returnValue === false) {\n                e.preventDefault()\n            } else {\n                if (modifiers.includes('once')) {\n                    listenerTarget.removeEventListener(event, handler)\n                }\n            }\n        }\n\n        listenerTarget.addEventListener(event, handler)\n    }\n}\n\nfunction runListenerHandler(component, expression, e, extraVars) {\n    return component.evaluateCommandExpression(e.target, expression, () => {\n        let extraVarsData = extraVars()\n        if (typeof extraVarsData === 'undefined') extraVarsData = {}\n        extraVarsData.$event = e\n\n        return extraVarsData\n    })\n}\n\nfunction isKeyEvent(event) {\n    return ['keydown', 'keyup'].includes(event)\n}\n\nfunction isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers) {\n    let keyModifiers = modifiers.filter(i => {\n        return ! ['window', 'document', 'prevent', 'stop'].includes(i)\n    })\n\n    // If no modifier is specified, we'll call it a press.\n    if (keyModifiers.length === 0) return false\n\n    // If one is passed, AND it matches the key pressed, we'll call it a press.\n    if (keyModifiers.length === 1 && keyModifiers[0] === keyToModifier(e.key)) return false\n\n    // The user is listening for key combinations.\n    const systemKeyModifiers = ['ctrl', 'shift', 'alt', 'meta', 'cmd', 'super']\n    const selectedSystemKeyModifiers = systemKeyModifiers.filter(modifier => keyModifiers.includes(modifier))\n\n    keyModifiers = keyModifiers.filter(i => ! selectedSystemKeyModifiers.includes(i))\n\n    if (selectedSystemKeyModifiers.length > 0) {\n        const activelyPressedKeyModifiers = selectedSystemKeyModifiers.filter(modifier => {\n            // Alias \"cmd\" and \"super\" to \"meta\"\n            if (modifier === 'cmd' || modifier === 'super') modifier = 'meta'\n\n            return e[`${modifier}Key`]\n        })\n\n        // If all the modifiers selected are pressed, ...\n        if (activelyPressedKeyModifiers.length === selectedSystemKeyModifiers.length) {\n            // AND the remaining key is pressed as well. It's a press.\n            if (keyModifiers[0] === keyToModifier(e.key)) return false\n        }\n    }\n\n    // We'll call it NOT a valid keypress.\n    return true\n}\n\nfunction keyToModifier(key) {\n    switch (key) {\n        case '/':\n            return 'slash'\n        case ' ':\n        case 'Spacebar':\n            return 'space'\n        default:\n            return kebabCase(key)\n    }\n}\n","import { registerListener } from './on'\n\nexport function registerModelListener(component, el, modifiers, expression, extraVars) {\n    // If the element we are binding to is a select, a radio, or checkbox\n    // we'll listen for the change event instead of the \"input\" event.\n    var event = (el.tagName.toLowerCase() === 'select')\n        || ['checkbox', 'radio'].includes(el.type)\n        || modifiers.includes('lazy')\n        ? 'change' : 'input'\n\n    const listenerExpression = `${expression} = rightSideOfExpression($event, ${expression})`\n\n    registerListener(component, el, event, modifiers, listenerExpression, () => {\n        let extraVarsData = extraVars()\n        if (typeof extraVarsData === 'undefined') extraVarsData = {}\n        extraVarsData.rightSideOfExpression =  generateModelAssignmentFunction(el, modifiers, expression)\n\n        return extraVarsData\n    })\n}\n\nfunction generateModelAssignmentFunction(el, modifiers, expression) {\n    if (el.type === 'radio') {\n        // Radio buttons only work properly when they share a name attribute.\n        // People might assume we take care of that for them, because\n        // they already set a shared \"x-model\" attribute.\n        if (! el.hasAttribute('name')) el.setAttribute('name', expression)\n    }\n\n    return (event, currentValue) => {\n        if (event instanceof CustomEvent) {\n            return event.detail\n        } else if (el.type === 'checkbox') {\n            // If the data we are binding to is an array, toggle it's value inside the array.\n            if (Array.isArray(currentValue)) {\n                return event.target.checked ? currentValue.concat([event.target.value]) : currentValue.filter(i => i !== event.target.value)\n            } else {\n                return event.target.checked\n            }\n        } else if (el.tagName.toLowerCase() === 'select' && el.multiple) {\n            return modifiers.includes('number')\n                ? Array.from(event.target.selectedOptions).map(option => { return parseFloat(option.value || option.text) })\n                : Array.from(event.target.selectedOptions).map(option => { return option.value || option.text })\n        } else {\n            return modifiers.includes('number')\n                ? parseFloat(event.target.value)\n                : (modifiers.includes('trim') ? event.target.value.trim() : event.target.value)\n        }\n    }\n}\n","import { walk, saferEval, saferEvalNoReturn, getXAttrs, debounce, deepProxy } from './utils'\nimport { handleForDirective } from './directives/for'\nimport { handleAttributeBindingDirective } from './directives/bind'\nimport { handleShowDirective } from './directives/show'\nimport { handleIfDirective } from './directives/if'\nimport { registerModelListener } from './directives/model'\nimport { registerListener } from './directives/on'\n\nexport default class Component {\n    constructor(el) {\n        this.$el = el\n\n        const dataAttr = this.$el.getAttribute('x-data')\n        const dataExpression = dataAttr === '' ? '{}' : dataAttr\n        const initExpression = this.$el.getAttribute('x-init')\n        const createdExpression = this.$el.getAttribute('x-created')\n        const mountedExpression = this.$el.getAttribute('x-mounted')\n\n        const unobservedData = saferEval(dataExpression, {})\n\n        // Construct a Proxy-based observable. This will be used to handle reactivity.\n        this.$data = this.wrapDataInObservable(unobservedData)\n\n        // After making user-supplied data methods reactive, we can now add\n        // our magic properties to the original data for access.\n        unobservedData.$el = this.$el\n        unobservedData.$refs = this.getRefsProxy()\n\n        this.nextTickStack = []\n        unobservedData.$nextTick = (callback) => {\n            this.nextTickStack.push(callback)\n        }\n\n        var initReturnedCallback\n        if (initExpression) {\n            // We want to allow data manipulation, but not trigger DOM updates just yet.\n            // We haven't even initialized the elements with their Alpine bindings. I mean c'mon.\n            this.pauseReactivity = true\n            initReturnedCallback = this.evaluateReturnExpression(this.$el, initExpression)\n            this.pauseReactivity = false\n        }\n\n        if (createdExpression) {\n            console.warn('AlpineJS Warning: \"x-created\" is deprecated and will be removed in the next major version. Use \"x-init\" instead.')\n            this.pauseReactivity = true\n            saferEvalNoReturn(this.$el.getAttribute('x-created'), this.$data)\n            this.pauseReactivity = false\n        }\n\n        // Register all our listeners and set all our attribute bindings.\n        this.initializeElements(this.$el)\n\n        // Use mutation observer to detect new elements being added within this component at run-time.\n        // Alpine's just so darn flexible amirite?\n        this.listenForNewElementsToInitialize()\n\n        if (typeof initReturnedCallback === 'function') {\n            // Run the callback returned form the \"x-init\" hook to allow the user to do stuff after\n            // Alpine's got it's grubby little paws all over everything.\n            initReturnedCallback.call(this.$data)\n        }\n\n        if (mountedExpression) {\n            console.warn('AlpineJS Warning: \"x-mounted\" is deprecated and will be removed in the next major version. Use \"x-init\" (with a callback return) for the same behavior.')\n            // Run an \"x-mounted\" hook to allow the user to do stuff after\n            // Alpine's got it's grubby little paws all over everything.\n            saferEvalNoReturn(mountedExpression, this.$data)\n        }\n    }\n\n    wrapDataInObservable(data) {\n        var self = this\n\n        const proxyHandler = {\n            set(obj, property, value) {\n                // Set the value converting it to a \"Deep Proxy\" when required\n                // Note that if a project is not a valid object, it won't be converted to a proxy\n                const setWasSuccessful = Reflect.set(obj, property, deepProxy(value, proxyHandler))\n\n                // Don't react to data changes for cases like the `x-created` hook.\n                if (self.pauseReactivity) return setWasSuccessful\n\n                debounce(() => {\n                    self.updateElements(self.$el)\n\n                    // Walk through the $nextTick stack and clear it as we go.\n                    while (self.nextTickStack.length > 0) {\n                        self.nextTickStack.shift()()\n                    }\n                }, 0)()\n\n                return setWasSuccessful\n            },\n            get(target, key) {\n                // Provide a way to determine if this object is an Alpine proxy or not.\n                if (key === \"$isAlpineProxy\") return true\n\n                // Just return the flippin' value. Gawsh.\n                return target[key]\n            }\n        }\n\n        return deepProxy(data, proxyHandler)\n    }\n\n    walkAndSkipNestedComponents(el, callback, initializeComponentCallback = () => {}) {\n        walk(el, el => {\n            // We've hit a component.\n            if (el.hasAttribute('x-data')) {\n                // If it's not the current one.\n                if (! el.isSameNode(this.$el)) {\n                    // Initialize it if it's not.\n                    if (! el.__x) initializeComponentCallback(el)\n\n                    // Now we'll let that sub-component deal with itself.\n                    return false\n                }\n            }\n\n            return callback(el)\n        })\n    }\n\n    initializeElements(rootEl, extraVars = () => {}) {\n        this.walkAndSkipNestedComponents(rootEl, el => {\n            // Don't touch spawns from for loop\n            if (el.__x_for_key !== undefined) return false\n\n            this.initializeElement(el, extraVars)\n        }, el => {\n            el.__x = new Component(el)\n        })\n\n        // Walk through the $nextTick stack and clear it as we go.\n        while (this.nextTickStack.length > 0) {\n            this.nextTickStack.shift()()\n        }\n    }\n\n    initializeElement(el, extraVars) {\n        // To support class attribute merging, we have to know what the element's\n        // original class attribute looked like for reference.\n        if (el.hasAttribute('class') && getXAttrs(el).length > 0) {\n            el.__x_original_classes = el.getAttribute('class').split(' ')\n        }\n\n        this.registerListeners(el, extraVars)\n        this.resolveBoundAttributes(el, true, extraVars)\n    }\n\n    updateElements(rootEl, extraVars = () => {}) {\n        this.walkAndSkipNestedComponents(rootEl, el => {\n            // Don't touch spawns from for loop (and check if the root is actually a for loop in a parent, don't skip it.)\n            if (el.__x_for_key !== undefined && ! el.isSameNode(this.$el)) return false\n\n            this.updateElement(el, extraVars)\n        }, el => {\n            el.__x = new Component(el)\n        })\n    }\n\n    updateElement(el, extraVars) {\n        this.resolveBoundAttributes(el, false, extraVars)\n    }\n\n    registerListeners(el, extraVars) {\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\n            switch (type) {\n                case 'on':\n                    registerListener(this, el, value, modifiers, expression, extraVars)\n                    break;\n\n                case 'model':\n                    registerModelListener(this, el, modifiers, expression, extraVars)\n                    break;\n                default:\n                    break;\n            }\n        })\n    }\n\n    resolveBoundAttributes(el, initialUpdate = false, extraVars) {\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\n            switch (type) {\n                case 'model':\n                    handleAttributeBindingDirective(this, el, 'value', expression, extraVars)\n                    break;\n\n                case 'bind':\n                    // The :key binding on an x-for is special, ignore it.\n                    if (el.tagName.toLowerCase() === 'template' && value === 'key') return\n\n                    handleAttributeBindingDirective(this, el, value, expression, extraVars)\n                    break;\n\n                case 'text':\n                    var output = this.evaluateReturnExpression(el, expression, extraVars);\n\n                    // If nested model key is undefined, set the default value to empty string.\n                    if (output === undefined && expression.match(/\\./).length) {\n                        output = ''\n                    }\n\n                    el.innerText = output\n                    break;\n\n                case 'html':\n                    el.innerHTML = this.evaluateReturnExpression(el, expression, extraVars)\n                    break;\n\n                case 'show':\n                    var output = this.evaluateReturnExpression(el, expression, extraVars)\n\n                    handleShowDirective(el, output, initialUpdate)\n                    break;\n\n                case 'if':\n                    var output = this.evaluateReturnExpression(el, expression, extraVars)\n\n                    handleIfDirective(el, output, initialUpdate)\n                    break;\n\n                case 'for':\n                    handleForDirective(this, el, expression, initialUpdate)\n                    break;\n\n                case 'cloak':\n                    el.removeAttribute('x-cloak')\n                    break;\n\n                default:\n                    break;\n            }\n        })\n    }\n\n    evaluateReturnExpression(el, expression, extraVars = () => {}) {\n        let extraVarsData = extraVars()\n        if (typeof extraVarsData === 'undefined') extraVarsData = {}\n        extraVarsData.$dispatch = this.getDispatchFunction(el)\n\n        return saferEval(expression, this.$data, extraVarsData)\n    }\n\n    evaluateCommandExpression(el, expression, extraVars = () => {}) {\n        let extraVarsData = extraVars()\n        if (typeof extraVarsData === 'undefined') extraVarsData = {}\n        extraVarsData.$dispatch = this.getDispatchFunction(el)\n\n        return saferEvalNoReturn(expression, this.$data, extraVarsData)\n    }\n\n    getDispatchFunction (el) {\n        return (event, detail = {}) => {\n            el.dispatchEvent(new CustomEvent(event, {\n                detail,\n                bubbles: true,\n            }))\n        }\n    }\n\n    listenForNewElementsToInitialize() {\n        const targetNode = this.$el\n\n        const observerOptions = {\n            childList: true,\n            attributes: true,\n            subtree: true,\n        }\n\n        const observer = new MutationObserver((mutations) => {\n            for (let i=0; i < mutations.length; i++){\n                // Filter out mutations triggered from child components.\n                const closestParentComponent = mutations[i].target.closest('[x-data]')\n                if (! (closestParentComponent && closestParentComponent.isSameNode(this.$el))) return\n\n                if (mutations[i].type === 'attributes' && mutations[i].attributeName === 'x-data') {\n                    const rawData = saferEval(mutations[i].target.getAttribute('x-data'), {})\n\n                    Object.keys(rawData).forEach(key => {\n                        if (this.$data[key] !== rawData[key]) {\n                            this.$data[key] = rawData[key]\n                        }\n                    })\n                }\n\n                if (mutations[i].addedNodes.length > 0) {\n                    mutations[i].addedNodes.forEach(node => {\n                        if (node.nodeType !== 1) return\n\n                        if (node.matches('[x-data]')) {\n                            node.__x = new Component(node)\n                            return\n                        }\n\n                        this.initializeElements(node)\n                    })\n                }\n              }\n        })\n\n        observer.observe(targetNode, observerOptions);\n    }\n\n    getRefsProxy() {\n        var self = this\n\n        // One of the goals of this is to not hold elements in memory, but rather re-evaluate\n        // the DOM when the system needs something from it. This way, the framework is flexible and\n        // friendly to outside DOM changes from libraries like Vue/Livewire.\n        // For this reason, I'm using an \"on-demand\" proxy to fake a \"$refs\" object.\n        return new Proxy({}, {\n            get(object, property) {\n                if (property === '$isAlpineProxy') return true\n\n                var ref\n\n                // We can't just query the DOM because it's hard to filter out refs in\n                // nested components.\n                self.walkAndSkipNestedComponents(self.$el, el => {\n                    if (el.hasAttribute('x-ref') && el.getAttribute('x-ref') === property) {\n                        ref = el\n                    }\n                })\n\n                return ref\n            }\n        })\n    }\n}\n","import { transitionIn, transitionOut } from '../utils'\n\nexport function handleShowDirective(el, value, initialUpdate = false) {\n    if (! value) {\n        if ( el.style.display !== 'none' ) {\n            transitionOut(el, () => {\n                el.style.display = 'none'\n            }, initialUpdate)\n        }\n    } else {\n        if ( el.style.display !== '' ) {\n            transitionIn(el, () => {\n                if (el.style.length === 1) {\n                    el.removeAttribute('style')\n                } else {\n                    el.style.removeProperty('display')\n                }\n            }, initialUpdate)\n        }\n    }\n}\n","import { transitionIn, transitionOut } from '../utils'\n\nexport function handleIfDirective(el, expressionResult, initialUpdate) {\n    if (el.nodeName.toLowerCase() !== 'template') console.warn(`Alpine: [x-if] directive should only be added to <template> tags. See https://github.com/alpinejs/alpine#x-if`)\n\n    const elementHasAlreadyBeenAdded = el.nextElementSibling && el.nextElementSibling.__x_inserted_me === true\n\n    if (expressionResult && ! elementHasAlreadyBeenAdded) {\n        const clone = document.importNode(el.content, true);\n\n        el.parentElement.insertBefore(clone, el.nextElementSibling)\n\n        el.nextElementSibling.__x_inserted_me = true\n\n        transitionIn(el.nextElementSibling, () => {}, initialUpdate)\n    } else if (! expressionResult && elementHasAlreadyBeenAdded) {\n        transitionOut(el.nextElementSibling, () => {\n            el.nextElementSibling.remove()\n        }, initialUpdate)\n    }\n}\n","import Component from './component'\nimport { domReady, isTesting } from './utils'\n\nconst Alpine = {\n    start: async function () {\n        if (! isTesting()) {\n            await domReady()\n        }\n\n        this.discoverComponents(el => {\n            this.initializeComponent(el)\n        })\n\n        // It's easier and more performant to just support Turbolinks than listen\n        // to MutationOberserver mutations at the document level.\n        document.addEventListener(\"turbolinks:load\", () => {\n            this.discoverUninitializedComponents(el => {\n                this.initializeComponent(el)\n            })\n        })\n\n        this.listenForNewUninitializedComponentsAtRunTime(el => {\n            this.initializeComponent(el)\n        })\n    },\n\n    discoverComponents: function (callback) {\n        const rootEls = document.querySelectorAll('[x-data]');\n\n        rootEls.forEach(rootEl => {\n            callback(rootEl)\n        })\n    },\n\n    discoverUninitializedComponents: function (callback, el = null) {\n        const rootEls = (el || document).querySelectorAll('[x-data]');\n\n        Array.from(rootEls)\n            .filter(el => el.__x === undefined)\n            .forEach(rootEl => {\n                callback(rootEl)\n            })\n    },\n\n    listenForNewUninitializedComponentsAtRunTime: function (callback) {\n        const targetNode = document.querySelector('body');\n\n        const observerOptions = {\n            childList: true,\n            attributes: true,\n            subtree: true,\n        }\n\n        const observer = new MutationObserver((mutations) => {\n            for (let i=0; i < mutations.length; i++){\n                if (mutations[i].addedNodes.length > 0) {\n                    mutations[i].addedNodes.forEach(node => {\n                        // Discard non-element nodes (like line-breaks)\n                        if (node.nodeType !== 1) return\n\n                        // Discard any changes happening within an existing component.\n                        // They will take care of themselves.\n                        if (node.parentElement && node.parentElement.closest('[x-data]')) return\n\n                        this.discoverUninitializedComponents((el) => {\n                            this.initializeComponent(el)\n                        }, node.parentElement)\n                    })\n                }\n              }\n        })\n\n        observer.observe(targetNode, observerOptions)\n    },\n\n    initializeComponent: function (el) {\n        if (! el.__x) {\n            el.__x = new Component(el)\n        }\n    }\n}\n\nif (! isTesting()) {\n    window.Alpine = Alpine\n    window.Alpine.start()\n}\n\nexport default Alpine\n"],"names":["arrayUnique","array","a","concat","i","length","j","splice","isTesting","navigator","userAgent","includes","saferEval","expression","dataContext","additionalHelperVariables","Function","saferEvalNoReturn","isXAttr","attr","name","replaceAtAndColonWithStandardSyntax","test","getXAttrs","el","type","Array","from","attributes","filter","map","typeMatch","match","valueMatch","modifiers","value","replace","startsWith","transitionIn","callback","forceSkip","attrs","transition","find","split","transitionOut","classesDuring","classesStart","classesEnd","hook1","hook2","originalClasses","__x_original_classes","classList","add","requestAnimationFrame","duration","Number","getComputedStyle","transitionDuration","remove","setTimeout","isConnected","deepProxy","target","proxyHandler","Node","property","Proxy","handleForDirective","component","initialUpdate","single","bunch","iterator1","iterator2","forIteratorRE","inMatch","res","trim","iteratorMatch","parseFor","items","evaluateReturnExpression","previousEl","forEach","index","group","currentKey","keyAttr","keyAliases","getThisIterationsKeyFromTemplateTag","currentEl","nextElementSibling","undefined","__x_for_key","tmpCurrentEl","parentElement","insertBefore","__x_for_alias","__x_for_value","extraVars","Object","defineProperty","get","set","newValue","configurable","updateElements","clone","document","importNode","content","initializeElements","nextElementFromOldLoop","nextElementFromOldLoopImmutable","nextSibling","handleAttributeBindingDirective","attrName","checked","isArray","valueFound","val","tagName","arrayWrappedValue","options","option","selected","text","updateSelect","setAttribute","join","keys","classNames","className","newClasses","removeAttribute","registerListener","event","handler","e","contains","offsetWidth","offsetHeight","runListenerHandler","removeEventListener","addEventListener","listenerTarget","window","isKeyEvent","keyModifiers","keyToModifier","key","selectedSystemKeyModifiers","modifier","isListeningForASpecificKeyThatHasntBeenPressed","preventDefault","stopPropagation","evaluateCommandExpression","extraVarsData","$event","toLowerCase","registerModelListener","rightSideOfExpression","hasAttribute","currentValue","CustomEvent","detail","multiple","selectedOptions","parseFloat","generateModelAssignmentFunction","Component","constructor","$el","dataAttr","this","getAttribute","dataExpression","initExpression","createdExpression","mountedExpression","unobservedData","initReturnedCallback","$data","wrapDataInObservable","$refs","getRefsProxy","nextTickStack","$nextTick","push","pauseReactivity","console","warn","listenForNewElementsToInitialize","call","data","self","obj","setWasSuccessful","Reflect","func","shift","wait","context","args","arguments","later","timeout","apply","clearTimeout","walkAndSkipNestedComponents","initializeComponentCallback","walk","node","firstElementChild","isSameNode","__x","rootEl","initializeElement","registerListeners","resolveBoundAttributes","updateElement","output","innerText","innerHTML","style","display","removeProperty","handleShowDirective","expressionResult","nodeName","elementHasAlreadyBeenAdded","__x_inserted_me","handleIfDirective","$dispatch","getDispatchFunction","dispatchEvent","bubbles","targetNode","MutationObserver","mutations","closestParentComponent","closest","attributeName","rawData","addedNodes","nodeType","matches","observe","childList","subtree","object","ref","Alpine","start","async","Promise","resolve","readyState","discoverComponents","initializeComponent","discoverUninitializedComponents","listenForNewUninitializedComponentsAtRunTime","querySelectorAll","rootEls","querySelector"],"mappings":"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"}