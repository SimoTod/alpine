{"version":3,"file":"alpine.js","sources":["../src/utils.js","../src/directives/for.js","../src/directives/bind.js","../src/directives/on.js","../src/directives/model.js","../src/component.js","../src/directives/show.js","../src/directives/if.js","../src/index.js"],"sourcesContent":["\n// Thanks @stimulus:\n// https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\nexport function domReady() {\n    return new Promise(resolve => {\n        if (document.readyState == \"loading\") {\n            document.addEventListener(\"DOMContentLoaded\", resolve)\n        } else {\n            resolve()\n        }\n    })\n}\n\nexport function arrayUnique(array) {\n    var a = array.concat();\n    for(var i=0; i<a.length; ++i) {\n        for(var j=i+1; j<a.length; ++j) {\n            if(a[i] === a[j])\n                a.splice(j--, 1);\n        }\n    }\n\n    return a;\n}\n\nexport function isTesting() {\n    return navigator.userAgent, navigator.userAgent.includes(\"Node.js\")\n        || navigator.userAgent.includes(\"jsdom\")\n}\n\nexport function kebabCase(subject) {\n    return subject.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[_\\s]/, '-').toLowerCase()\n}\n\nexport function walk(el, callback) {\n    if (callback(el) === false) return\n\n    let node = el.firstElementChild\n\n    while (node) {\n        walk(node, callback)\n\n        node = node.nextElementSibling\n    }\n}\n\nexport function debounce(func, wait) {\n    var timeout\n    return function () {\n        var context = this, args = arguments\n        var later = function () {\n            timeout = null\n            func.apply(context, args)\n        }\n        clearTimeout(timeout)\n        timeout = setTimeout(later, wait)\n    }\n}\n\nexport function saferEval(expression, dataContext, additionalHelperVariables = {}) {\n    return (new Function(['$data', ...Object.keys(additionalHelperVariables)], `var result; with($data) { result = ${expression} }; return result`))(\n        dataContext, ...Object.values(additionalHelperVariables)\n    )\n}\n\nexport function saferEvalNoReturn(expression, dataContext, additionalHelperVariables = {}) {\n    return (new Function(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { ${expression} }`))(\n        dataContext, ...Object.values(additionalHelperVariables)\n    )\n}\n\nexport function isXAttr(attr) {\n    const name = replaceAtAndColonWithStandardSyntax(attr.name)\n\n    const xAttrRE = /x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref)/\n\n    return xAttrRE.test(name)\n}\n\nexport function getXAttrs(el, type) {\n    return Array.from(el.attributes)\n        .filter(isXAttr)\n        .map(attr => {\n            const name = replaceAtAndColonWithStandardSyntax(attr.name)\n\n            const typeMatch = name.match(/x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref)/)\n            const valueMatch = name.match(/:([a-zA-Z\\-:]+)/)\n            const modifiers = name.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || []\n\n            return {\n                type: typeMatch ? typeMatch[1] : null,\n                value: valueMatch ? valueMatch[1] : null,\n                modifiers: modifiers.map(i => i.replace('.', '')),\n                expression: attr.value,\n            }\n        })\n        .filter(i => {\n            // If no type is passed in for filtering, bypass filter\n            if (! type) return true\n\n            return i.type === type\n        })\n}\n\nexport function replaceAtAndColonWithStandardSyntax(name) {\n    if (name.startsWith('@')) {\n        return name.replace('@', 'x-on:')\n    } else if (name.startsWith(':')) {\n        return name.replace(':', 'x-bind:')\n    }\n\n    return name\n}\n\nexport function transitionIn(el, show, forceSkip = false) {\n    // We don't want to transition on the initial page load.\n    if (forceSkip) return show()\n\n    const attrs = getXAttrs(el, 'transition')\n    const showAttr = getXAttrs(el, 'show')[0]\n\n    // If this is triggered by a x-show.transition.\n    if (showAttr && showAttr.modifiers.includes('transition')) {\n        let modifiers = showAttr.modifiers\n\n        // If x-show.transition.out, we'll skip the \"in\" transition.\n        if (modifiers.includes('out') && ! modifiers.includes('in')) return show()\n\n        const settingBothSidesOfTransition = modifiers.includes('in') && modifiers.includes('out')\n\n        // If x-show.transition.in...out... only use \"in\" related modifiers for this transition.\n        modifiers = settingBothSidesOfTransition\n            ? modifiers.filter((i, index) => index < modifiers.indexOf('out')) : modifiers\n\n        transitionHelperIn(el, modifiers, show)\n    // Otherwise, we can assume x-transition:enter.\n    } else if (attrs.length > 0) {\n        transitionClassesIn(el, attrs, show)\n    } else {\n    // If neither, just show that damn thing.\n        show()\n    }\n}\n\nexport function transitionOut(el, hide, forceSkip = false) {\n    if (forceSkip) return hide()\n\n    const attrs = getXAttrs(el, 'transition')\n    const showAttr = getXAttrs(el, 'show')[0]\n\n    if (showAttr && showAttr.modifiers.includes('transition')) {\n        let modifiers = showAttr.modifiers\n\n        if (modifiers.includes('in') && ! modifiers.includes('out')) return hide()\n\n        const settingBothSidesOfTransition = modifiers.includes('in') && modifiers.includes('out')\n\n        modifiers = settingBothSidesOfTransition\n            ? modifiers.filter((i, index) => index > modifiers.indexOf('out')) : modifiers\n\n        transitionHelperOut(el, modifiers, settingBothSidesOfTransition, hide)\n    } else if (attrs.length > 0) {\n        transitionClassesOut(el, attrs, hide)\n    } else {\n        hide()\n    }\n}\n\nexport function transitionHelperIn(el, modifiers, showCallback) {\n    // Default values inspired by: https://material.io/design/motion/speed.html#duration\n    const styleValues = {\n        duration: modifierValue(modifiers, 'duration', 150),\n        origin: modifierValue(modifiers, 'origin', 'center'),\n        first: {\n            opacity: 0,\n            scale: modifierValue(modifiers, 'scale', 95),\n        },\n        second: {\n            opacity: 1,\n            scale: 100,\n        },\n    }\n\n    transitionHelper(el, modifiers, showCallback, () => {}, styleValues)\n}\n\nexport function transitionHelperOut(el, modifiers, settingBothSidesOfTransition, hideCallback) {\n    // Make the \"out\" transition .5x slower than the \"in\". (Visually better)\n    // HOWEVER, if they explicitly set a duration for the \"out\" transition,\n    // use that.\n    const duration = settingBothSidesOfTransition\n        ? modifierValue(modifiers, 'duration', 150)\n        : modifierValue(modifiers, 'duration', 150) / 2\n\n    const styleValues = {\n        duration: duration,\n        origin: modifierValue(modifiers, 'origin', 'center'),\n        first: {\n            opacity: 1,\n            scale: 100,\n        },\n        second: {\n            opacity: 0,\n            scale: modifierValue(modifiers, 'scale', 95),\n        },\n    }\n\n    transitionHelper(el, modifiers, () => {}, hideCallback, styleValues)\n}\n\nfunction modifierValue(modifiers, key, fallback) {\n    // If the modifier isn't present, use the default.\n    if (modifiers.indexOf(key) === -1) return fallback\n\n    // If it IS present, grab the value after it: x-show.transition.duration.500ms\n    const rawValue = modifiers[modifiers.indexOf(key) + 1]\n\n    if (! rawValue) return fallback\n\n    if (key === 'scale') {\n        // Check if the very next value is NOT a number and return the fallback.\n        // If x-show.transition.scale, we'll use the default scale value.\n        // That is how a user opts out of the opacity transition.\n        if (! isNumeric(rawValue)) return fallback\n    }\n\n    if (key === 'duration') {\n        // Support x-show.transition.duration.500ms && duration.500\n        let match = rawValue.match(/([0-9]+)ms/)\n        if (match) return match[1]\n    }\n\n    if (key === 'origin') {\n        // Support chaining origin directions: x-show.transition.top.right\n        if (['top', 'right', 'left', 'center', 'bottom'].includes(modifiers[modifiers.indexOf(key) + 2])) {\n            return [rawValue, modifiers[modifiers.indexOf(key) + 2]].join(' ')\n        }\n    }\n\n    return rawValue\n}\n\nexport function transitionHelper(el, modifiers, hook1, hook2, styleValues) {\n    // If the user set these style values, we'll put them back when we're done with them.\n    const opacityCache = el.style.opacity\n    const transformCache = el.style.transform\n    const transformOriginCache = el.style.transformOrigin\n\n    // If no modifiers are present: x-show.transition, we'll default to both opacity and scale.\n    const noModifiers = ! modifiers.includes('opacity') && ! modifiers.includes('scale')\n    const transitionOpacity = noModifiers || modifiers.includes('opacity')\n    const transitionScale = noModifiers || modifiers.includes('scale')\n\n    // These are the explicit stages of a transition (same stages for in and for out).\n    // This way you can get a birds eye view of the hooks, and the differences\n    // between them.\n    const stages = {\n        start() {\n            if (transitionOpacity) el.style.opacity = styleValues.first.opacity\n            if (transitionScale) el.style.transform = `scale(${styleValues.first.scale / 100})`\n        },\n        during() {\n            if (transitionScale) el.style.transformOrigin = styleValues.origin\n            el.style.transitionProperty = [(transitionOpacity ? `opacity` : ``), (transitionScale ? `transform` : ``)].join(' ').trim()\n            el.style.transitionDuration = `${styleValues.duration / 1000}s`\n            el.style.transitionTimingFunction = `cubic-bezier(0.4, 0.0, 0.2, 1)`\n        },\n        show() {\n            hook1()\n        },\n        end() {\n            if (transitionOpacity) el.style.opacity = styleValues.second.opacity\n            if (transitionScale) el.style.transform = `scale(${styleValues.second.scale / 100})`\n        },\n        hide() {\n            hook2()\n        },\n        cleanup() {\n            if (transitionOpacity) el.style.opacity = opacityCache\n            if (transitionScale) el.style.transform = transformCache\n            if (transitionScale) el.style.transformOrigin = transformOriginCache\n            el.style.transitionProperty = null\n            el.style.transitionDuration = null\n            el.style.transitionTimingFunction = null\n        },\n    }\n\n    transition(el, stages)\n}\n\nexport function transitionClassesIn(el, directives, showCallback) {\n    const enter = (directives.find(i => i.value === 'enter') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const enterStart = (directives.find(i => i.value === 'enter-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const enterEnd = (directives.find(i => i.value === 'enter-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n\n    transitionClasses(el, enter, enterStart, enterEnd, showCallback, () => {})\n}\n\nexport function transitionClassesOut(el, directives, hideCallback) {\n    const leave = (directives.find(i => i.value === 'leave') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const leaveStart = (directives.find(i => i.value === 'leave-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const leaveEnd = (directives.find(i => i.value === 'leave-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n\n    transitionClasses(el, leave, leaveStart, leaveEnd, () => {}, hideCallback)\n}\n\nexport function transitionClasses(el, classesDuring, classesStart, classesEnd, hook1, hook2) {\n    const originalClasses = el.__x_original_classes || []\n\n    const stages = {\n        start() {\n            el.classList.add(...classesStart)\n        },\n        during() {\n            el.classList.add(...classesDuring)\n        },\n        show() {\n            hook1()\n        },\n        end() {\n            // Don't remove classes that were in the original class attribute.\n            el.classList.remove(...classesStart.filter(i => !originalClasses.includes(i)))\n            el.classList.add(...classesEnd)\n        },\n        hide() {\n            hook2()\n        },\n        cleanup() {\n            el.classList.remove(...classesDuring.filter(i => !originalClasses.includes(i)))\n            el.classList.remove(...classesEnd.filter(i => !originalClasses.includes(i)))\n        },\n    }\n\n    transition(el, stages)\n}\n\nexport function transition(el, stages) {\n    stages.start()\n    stages.during()\n\n    requestAnimationFrame(() => {\n        // Note: Safari's transitionDuration property will list out comma separated transition durations\n        // for every single transition property. Let's grab the first one and call it a day.\n        let duration = Number(getComputedStyle(el).transitionDuration.replace(/,.*/, '').replace('s', '')) * 1000\n\n        stages.show()\n\n        requestAnimationFrame(() => {\n            stages.end()\n\n            setTimeout(() => {\n                stages.hide()\n\n                // Adding an \"isConnected\" check, in case the callback\n                // removed the element from the DOM.\n                if (el.isConnected) {\n                    stages.cleanup()\n                }\n            }, duration);\n        })\n    });\n}\n\nexport function deepProxy(target, proxyHandler, functionHandler) {\n    // If target is null, return it.\n    if (target === null) return target;\n\n    // If target is not an object, return it.\n    if (typeof target !== 'object') return target;\n\n    // If target is a DOM node (like in the case of this.$el), return it.\n    if (target instanceof Node) return target\n\n    // If target is already an Alpine proxy, return it.\n    if (target['$isAlpineProxy']) return target;\n\n    // Otherwise proxy the properties recursively.\n    // This enables reactivity on setting nested data.\n    // Note that if a project is not a valid object, it won't be converted to a proxy\n    for (let property in target) {\n        target[property] = deepProxy(target[property], proxyHandler, functionHandler)\n    }\n\n    // Wrap each prototype method in a proxy object.\n    // In this way, we can bind them to the original context so native objects\n    // such as Dates, Regexp, etc won't break and, also, we can trigger a refresh\n    // so methods like Date.setSeconds are reactive.\n    if (Object.getPrototypeOf(target) !== Array.prototype) {\n        Object.getOwnPropertyNames(Object.getPrototypeOf(target)).filter(item => typeof target[item] === 'function').forEach(item => {\n            target[item] = new Proxy(target[item], functionHandler(target))\n        })\n    }\n\n    return new Proxy(target, proxyHandler)\n}\n\nfunction isNumeric(subject){\n    return ! isNaN(subject)\n}\n","import { transitionIn, transitionOut, getXAttrs } from '../utils'\n\nexport function handleForDirective(component, el, expression, initialUpdate) {\n    if (el.tagName.toLowerCase() !== 'template') console.warn('Alpine: [x-for] directive should only be added to <tempate> tags.')\n\n    const { single, bunch, iterator1, iterator2 } = parseFor(expression)\n\n    var items\n    const ifAttr = getXAttrs(el, 'if')[0]\n    if (ifAttr && ! component.evaluateReturnExpression(el, ifAttr.expression))  {\n        // If there is an \"x-if\" attribute in conjunction with an x-for,\n        // AND x-if resolves to false, just pretend the x-for is\n        // empty, effectively hiding it.\n        items = []\n    } else {\n        items = component.evaluateReturnExpression(el, bunch)\n    }\n\n    // As we walk the array, we'll also walk the DOM (updating/creating as we go).\n    var previousEl = el\n    items.forEach((i, index, group) => {\n        const currentKey = getThisIterationsKeyFromTemplateTag(component, el, single, iterator1, iterator2, i, index, group)\n        let currentEl = previousEl.nextElementSibling\n\n        // Let's check and see if the x-for has already generated an element last time it ran.\n        if (currentEl && currentEl.__x_for_key !== undefined) {\n            // If the the key's don't match.\n            if (currentEl.__x_for_key !== currentKey) {\n                // We'll look ahead to see if we can find it further down.\n                var tmpCurrentEl = currentEl\n                while(tmpCurrentEl) {\n                    // If we found it later in the DOM.\n                    if (tmpCurrentEl.__x_for_key === currentKey) {\n                        // Move it to where it's supposed to be in the DOM.\n                        el.parentElement.insertBefore(tmpCurrentEl, currentEl)\n                        // And set it as the current element as if we just created it.\n                        currentEl = tmpCurrentEl\n                        break\n                    }\n\n                    tmpCurrentEl = (tmpCurrentEl.nextElementSibling && tmpCurrentEl.nextElementSibling.__x_for_key !== undefined) ? tmpCurrentEl.nextElementSibling : false\n                }\n            }\n\n            // Temporarily remove the key indicator to allow the normal \"updateElements\" to work\n            delete currentEl.__x_for_key\n\n            let xForVars = {}\n            xForVars[single] = i\n            if (iterator1) xForVars[iterator1] = index\n            if (iterator2) xForVars[iterator2] = group\n            currentEl.__x_for = xForVars\n            component.updateElements(currentEl, () => {\n                return currentEl.__x_for\n            })\n        } else {\n            // There are no more .__x_for_key elements, meaning the page is first loading, OR, there are\n            // extra items in the array that need to be added as new elements.\n\n            // Let's create a clone from the template.\n            const clone = document.importNode(el.content, true)\n\n            if (clone.childElementCount !== 1) console.warn('Alpine: <template> tag with [x-for] encountered with multiple element roots. Make sure <template> only has a single child node.')\n\n            // Insert it where we are in the DOM.\n            el.parentElement.insertBefore(clone, currentEl)\n\n            // Set it as the current element.\n            currentEl = previousEl.nextElementSibling\n\n            // And transition it in if it's not the first page load.\n            transitionIn(currentEl, () => {}, initialUpdate)\n\n            // Now, let's walk the new DOM node and initialize everything,\n            // including new nested components.\n            // Note we are resolving the \"extraData\" alias stuff from the dom element value so that it's\n            // always up to date for listener handlers that don't get re-registered.\n            let xForVars = {}\n            xForVars[single] = i\n            if (iterator1) xForVars[iterator1] = index\n            if (iterator2) xForVars[iterator2] = group\n            currentEl.__x_for = xForVars\n            component.initializeElements(currentEl, () => {\n                return currentEl.__x_for\n            })\n        }\n\n        currentEl.__x_for_key = currentKey\n\n        previousEl = currentEl\n    })\n\n    // Now that we've added/updated/moved all the elements for the current state of the loop.\n    // Anything left over, we can get rid of.\n    var nextElementFromOldLoop = (previousEl.nextElementSibling && previousEl.nextElementSibling.__x_for_key !== undefined) ? previousEl.nextElementSibling : false\n\n    while(nextElementFromOldLoop) {\n        const nextElementFromOldLoopImmutable = nextElementFromOldLoop\n        const nextSibling = nextElementFromOldLoop.nextElementSibling\n\n        transitionOut(nextElementFromOldLoop, () => {\n            nextElementFromOldLoopImmutable.remove()\n        })\n\n        nextElementFromOldLoop = (nextSibling && nextSibling.__x_for_key !== undefined) ? nextSibling : false\n    }\n}\n\n// This was taken from VueJS 2.* core. Thanks Vue!\nfunction parseFor (expression) {\n    const forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/\n    const stripParensRE = /^\\(|\\)$/g\n    const forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/\n\n    const inMatch = expression.match(forAliasRE)\n    if (! inMatch) return\n    const res = {}\n    res.bunch = inMatch[2].trim()\n    const single = inMatch[1].trim().replace(stripParensRE, '')\n    const iteratorMatch = single.match(forIteratorRE)\n    if (iteratorMatch) {\n        res.single = single.replace(forIteratorRE, '').trim()\n        res.iterator1 = iteratorMatch[1].trim()\n        if (iteratorMatch[2]) {\n            res.iterator2 = iteratorMatch[2].trim()\n        }\n    } else {\n        res.single = single\n    }\n    return res\n  }\n\nfunction getThisIterationsKeyFromTemplateTag(component, el, single, iterator1, iterator2, i, index, group) {\n    const keyAttr = getXAttrs(el, 'bind').filter(attr => attr.value === 'key')[0]\n\n    let keyAliases = { [single]: i }\n    if (iterator1) keyAliases[iterator1] = index\n    if (iterator2) keyAliases[iterator2] = group\n\n    return keyAttr\n        ? component.evaluateReturnExpression(el, keyAttr.expression, () => keyAliases)\n        : index\n}\n","import { arrayUnique } from '../utils'\n\nexport function handleAttributeBindingDirective(component, el, attrName, expression, extraVars) {\n    var value = component.evaluateReturnExpression(el, expression, extraVars)\n\n    if (attrName === 'value') {\n        // If nested model key is undefined, set the default value to empty string.\n        if (value === undefined && expression.match(/\\./).length) {\n            value = ''\n        }\n\n        if (el.type === 'radio') {\n            el.checked = el.value == value\n        } else if (el.type === 'checkbox') {\n            if (Array.isArray(value)) {\n                // I'm purposely not using Array.includes here because it's\n                // strict, and because of Numeric/String mis-casting, I\n                // want the \"includes\" to be \"fuzzy\".\n                let valueFound = false\n                value.forEach(val => {\n                    if (val == el.value) {\n                        valueFound = true\n                    }\n                })\n\n                el.checked = valueFound\n            } else {\n                el.checked = !! value\n            }\n        } else if (el.tagName === 'SELECT') {\n            updateSelect(el, value)\n        } else {\n            el.value = value\n        }\n    } else if (attrName === 'class') {\n        if (Array.isArray(value)) {\n            const originalClasses = el.__x_original_classes || []\n            el.setAttribute('class', arrayUnique(originalClasses.concat(value)).join(' '))\n        } else if (typeof value === 'object') {\n            Object.keys(value).forEach(classNames => {\n                if (value[classNames]) {\n                    classNames.split(' ').forEach(className => el.classList.add(className))\n                } else {\n                    classNames.split(' ').forEach(className => el.classList.remove(className))\n                }\n            })\n        } else {\n            const originalClasses = el.__x_original_classes || []\n            const newClasses = value.split(' ')\n            el.setAttribute('class', arrayUnique(originalClasses.concat(newClasses)).join(' '))\n        }\n    } else if (['disabled', 'readonly', 'required', 'checked', 'hidden', 'selected'].includes(attrName)) {\n        // Boolean attributes have to be explicitly added and removed, not just set.\n        if (!! value) {\n            el.setAttribute(attrName, '')\n        } else {\n            el.removeAttribute(attrName)\n        }\n    } else {\n        el.setAttribute(attrName, value)\n    }\n}\n\nfunction updateSelect(el, value) {\n    const arrayWrappedValue = [].concat(value).map(value => { return value + '' })\n\n    Array.from(el.options).forEach(option => {\n        option.selected = arrayWrappedValue.includes(option.value || option.text)\n    })\n}\n","import { kebabCase } from '../utils'\n\nexport function registerListener(component, el, event, modifiers, expression, extraVars = {}) {\n    if (modifiers.includes('away')) {\n        const handler = e => {\n            // Don't do anything if the click came form the element or within it.\n            if (el.contains(e.target)) return\n\n            // Don't do anything if this element isn't currently visible.\n            if (el.offsetWidth < 1 && el.offsetHeight < 1) return\n\n            // Now that we are sure the element is visible, AND the click\n            // is from outside it, let's run the expression.\n            runListenerHandler(component, expression, e, extraVars)\n\n            if (modifiers.includes('once')) {\n                document.removeEventListener(event, handler)\n            }\n        }\n\n        // Listen for this event at the root level.\n        document.addEventListener(event, handler)\n    } else {\n        const listenerTarget = modifiers.includes('window')\n            ? window : (modifiers.includes('document') ? document : el)\n\n        const handler = e => {\n            if (isKeyEvent(event)) {\n                if (isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers)) {\n                    return\n                }\n            }\n\n            if (modifiers.includes('prevent')) e.preventDefault()\n            if (modifiers.includes('stop')) e.stopPropagation()\n\n            const returnValue = runListenerHandler(component, expression, e, extraVars)\n\n            if (returnValue === false) {\n                e.preventDefault()\n            } else {\n                if (modifiers.includes('once')) {\n                    listenerTarget.removeEventListener(event, handler)\n                }\n            }\n        }\n\n        listenerTarget.addEventListener(event, handler)\n    }\n}\n\nfunction runListenerHandler(component, expression, e, extraVars) {\n    return component.evaluateCommandExpression(e.target, expression, () => {\n        return {...extraVars(), '$event': e}\n    })\n}\n\nfunction isKeyEvent(event) {\n    return ['keydown', 'keyup'].includes(event)\n}\n\nfunction isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers) {\n    let keyModifiers = modifiers.filter(i => {\n        return ! ['window', 'document', 'prevent', 'stop'].includes(i)\n    })\n\n    // If no modifier is specified, we'll call it a press.\n    if (keyModifiers.length === 0) return false\n\n    // If one is passed, AND it matches the key pressed, we'll call it a press.\n    if (keyModifiers.length === 1 && keyModifiers[0] === keyToModifier(e.key)) return false\n\n    // The user is listening for key combinations.\n    const systemKeyModifiers = ['ctrl', 'shift', 'alt', 'meta', 'cmd', 'super']\n    const selectedSystemKeyModifiers = systemKeyModifiers.filter(modifier => keyModifiers.includes(modifier))\n\n    keyModifiers = keyModifiers.filter(i => ! selectedSystemKeyModifiers.includes(i))\n\n    if (selectedSystemKeyModifiers.length > 0) {\n        const activelyPressedKeyModifiers = selectedSystemKeyModifiers.filter(modifier => {\n            // Alias \"cmd\" and \"super\" to \"meta\"\n            if (modifier === 'cmd' || modifier === 'super') modifier = 'meta'\n\n            return e[`${modifier}Key`]\n        })\n\n        // If all the modifiers selected are pressed, ...\n        if (activelyPressedKeyModifiers.length === selectedSystemKeyModifiers.length) {\n            // AND the remaining key is pressed as well. It's a press.\n            if (keyModifiers[0] === keyToModifier(e.key)) return false\n        }\n    }\n\n    // We'll call it NOT a valid keypress.\n    return true\n}\n\nfunction keyToModifier(key) {\n    switch (key) {\n        case '/':\n            return 'slash'\n        case ' ':\n        case 'Spacebar':\n            return 'space'\n        default:\n            return kebabCase(key)\n    }\n}\n","import { registerListener } from './on'\n\nexport function registerModelListener(component, el, modifiers, expression, extraVars) {\n    // If the element we are binding to is a select, a radio, or checkbox\n    // we'll listen for the change event instead of the \"input\" event.\n    var event = (el.tagName.toLowerCase() === 'select')\n        || ['checkbox', 'radio'].includes(el.type)\n        || modifiers.includes('lazy')\n        ? 'change' : 'input'\n\n    const listenerExpression = `${expression} = rightSideOfExpression($event, ${expression})`\n\n    registerListener(component, el, event, modifiers, listenerExpression, () => {\n        return {\n            ...extraVars(),\n            rightSideOfExpression: generateModelAssignmentFunction(el, modifiers, expression),\n        }\n    })\n}\n\nfunction generateModelAssignmentFunction(el, modifiers, expression) {\n    if (el.type === 'radio') {\n        // Radio buttons only work properly when they share a name attribute.\n        // People might assume we take care of that for them, because\n        // they already set a shared \"x-model\" attribute.\n        if (! el.hasAttribute('name')) el.setAttribute('name', expression)\n    }\n\n    return (event, currentValue) => {\n        // Check for event.detail due to an issue where IE11 handles other events as a CustomEvent.\n        if (event instanceof CustomEvent && event.detail) {\n            return event.detail\n        } else if (el.type === 'checkbox') {\n            // If the data we are binding to is an array, toggle it's value inside the array.\n            if (Array.isArray(currentValue)) {\n                return event.target.checked ? currentValue.concat([event.target.value]) : currentValue.filter(i => i !== event.target.value)\n            } else {\n                return event.target.checked\n            }\n        } else if (el.tagName.toLowerCase() === 'select' && el.multiple) {\n            return modifiers.includes('number')\n                ? Array.from(event.target.selectedOptions).map(option => { return parseFloat(option.value || option.text) })\n                : Array.from(event.target.selectedOptions).map(option => { return option.value || option.text })\n        } else {\n            return modifiers.includes('number')\n                ? parseFloat(event.target.value)\n                : (modifiers.includes('trim') ? event.target.value.trim() : event.target.value)\n        }\n    }\n}\n","import { walk, saferEval, saferEvalNoReturn, getXAttrs, debounce, deepProxy } from './utils'\nimport { handleForDirective } from './directives/for'\nimport { handleAttributeBindingDirective } from './directives/bind'\nimport { handleShowDirective } from './directives/show'\nimport { handleIfDirective } from './directives/if'\nimport { registerModelListener } from './directives/model'\nimport { registerListener } from './directives/on'\n\nexport default class Component {\n    constructor(el, seedDataForCloning = null) {\n        this.$el = el\n\n        const dataAttr = this.$el.getAttribute('x-data')\n        const dataExpression = dataAttr === '' ? '{}' : dataAttr\n        const initExpression = this.$el.getAttribute('x-init')\n\n        this.unobservedData = seedDataForCloning ? seedDataForCloning : saferEval(dataExpression, {})\n\n        /* IE11-ONLY:START */\n            // For IE11, add our magic properties to the original data for access.\n            // The Proxy polyfill does not allow properties to be added after creation.\n            this.unobservedData.$el = null\n            this.unobservedData.$refs = null\n            this.unobservedData.$nextTick = null\n        /* IE11-ONLY:END */\n\n        // Construct a Proxy-based observable. This will be used to handle reactivity.\n        this.$data = this.wrapDataInObservable(this.unobservedData)\n\n        // After making user-supplied data methods reactive, we can now add\n        // our magic properties to the original data for access.\n        this.unobservedData.$el = this.$el\n        this.unobservedData.$refs = this.getRefsProxy()\n\n        this.nextTickStack = []\n        this.unobservedData.$nextTick = (callback) => {\n            this.nextTickStack.push(callback)\n        }\n\n        this.showDirectiveStack = []\n        this.showDirectiveLastElement\n\n        // We want to allow data manipulation, but not trigger DOM updates just yet.\n        // We haven't even initialized the elements with their Alpine bindings. I mean c'mon.\n        this.pauseReactivity = true\n\n        var initReturnedCallback\n        // If x-init is present AND we aren't cloning (skip x-init on clone)\n        if (initExpression && ! seedDataForCloning) {\n            initReturnedCallback = this.evaluateReturnExpression(this.$el, initExpression)\n        }\n\n        // Register all our listeners and set all our attribute bindings.\n        this.initializeElements(this.$el)\n\n        this.pauseReactivity = false\n\n        // Use mutation observer to detect new elements being added within this component at run-time.\n        // Alpine's just so darn flexible amirite?\n        this.listenForNewElementsToInitialize()\n\n        if (typeof initReturnedCallback === 'function') {\n            // Run the callback returned form the \"x-init\" hook to allow the user to do stuff after\n            // Alpine's got it's grubby little paws all over everything.\n            initReturnedCallback.call(this.$data)\n        }\n    }\n\n    getUnobservedData() {\n        let rawData = {}\n\n        Object.keys(this.unobservedData).forEach(key => {\n            if (['$el', '$refs', '$nextTick'].includes(key)) return\n\n            rawData[key] = this.unobservedData[key]\n        })\n\n        return rawData\n    }\n\n    wrapDataInObservable(data) {\n        var self = this\n\n        const functionHandler = (target) => ({\n            apply: function(callback, thisArg, argumentsList) {\n                const returnValue = Reflect.apply(callback, target, argumentsList)\n\n                if (self.pauseReactivity) return returnValue\n\n                // we pause the reactivity since we don't want to keep refreshing\n                // in case of one of the functions outputs a string.\n                self.pauseReactivity = true\n\n                debounce(() => {\n                    self.updateElements(self.$el)\n\n                    // Walk through the $nextTick stack and clear it as we go.\n                    while (self.nextTickStack.length > 0) {\n                        self.nextTickStack.shift()()\n                    }\n\n                    self.pauseReactivity = false\n                }, 0)()\n\n                return returnValue\n            }\n        })\n\n        const proxyHandler = {\n            set(obj, property, value) {\n                // Set the value converting it to a \"Deep Proxy\" when required\n                // Note that if a project is not a valid object, it won't be converted to a proxy\n                const setWasSuccessful = Reflect.set(obj, property, deepProxy(value, proxyHandler, functionHandler))\n\n                // Don't react to data changes for cases like the `x-created` hook.\n                if (self.pauseReactivity) return setWasSuccessful\n\n                debounce(() => {\n                    self.updateElements(self.$el)\n\n                    // Walk through the $nextTick stack and clear it as we go.\n                    while (self.nextTickStack.length > 0) {\n                        self.nextTickStack.shift()()\n                    }\n                }, 0)()\n\n                return setWasSuccessful\n            },\n            get(target, key) {\n                // Provide a way to determine if this object is an Alpine proxy or not.\n                if (key === \"$isAlpineProxy\") return true\n\n                // Just return the flippin' value. Gawsh.\n                return target[key]\n            }\n        }\n\n        return deepProxy(data, proxyHandler, functionHandler)\n    }\n\n    walkAndSkipNestedComponents(el, callback, initializeComponentCallback = () => {}) {\n        walk(el, el => {\n            // We've hit a component.\n            if (el.hasAttribute('x-data')) {\n                // If it's not the current one.\n                if (! el.isSameNode(this.$el)) {\n                    // Initialize it if it's not.\n                    if (! el.__x) initializeComponentCallback(el)\n\n                    // Now we'll let that sub-component deal with itself.\n                    return false\n                }\n            }\n\n            return callback(el)\n        })\n    }\n\n    initializeElements(rootEl, extraVars = () => {}) {\n        this.walkAndSkipNestedComponents(rootEl, el => {\n            // Don't touch spawns from for loop\n            if (el.__x_for_key !== undefined) return false\n\n            this.initializeElement(el, extraVars)\n        }, el => {\n            el.__x = new Component(el)\n        })\n\n        this.executeAndClearRemainingShowDirectiveStack()\n\n        // Walk through the $nextTick stack and clear it as we go.\n        while (this.nextTickStack.length > 0) {\n            this.nextTickStack.shift()()\n        }\n    }\n\n    initializeElement(el, extraVars) {\n        // To support class attribute merging, we have to know what the element's\n        // original class attribute looked like for reference.\n        if (el.hasAttribute('class') && getXAttrs(el).length > 0) {\n            el.__x_original_classes = el.getAttribute('class').split(' ')\n        }\n\n        this.registerListeners(el, extraVars)\n        this.resolveBoundAttributes(el, true, extraVars)\n    }\n\n    updateElements(rootEl, extraVars = () => {}) {\n        this.walkAndSkipNestedComponents(rootEl, el => {\n            // Don't touch spawns from for loop (and check if the root is actually a for loop in a parent, don't skip it.)\n            if (el.__x_for_key !== undefined && ! el.isSameNode(this.$el)) return false\n\n            this.updateElement(el, extraVars)\n        }, el => {\n            el.__x = new Component(el)\n        })\n\n        this.executeAndClearRemainingShowDirectiveStack()\n\n        // Walk through the $nextTick stack and clear it as we go.\n        while (this.nextTickStack.length > 0) {\n            this.nextTickStack.shift()()\n        }\n    }\n\n    executeAndClearRemainingShowDirectiveStack() {\n        // The goal here is to start all the x-show transitions\n        // and build a nested promise chain so that elements\n        // only hide when the children are finished hiding.\n        this.showDirectiveStack.reverse().map(thing => {\n            return new Promise(resolve => {\n                thing(finish => {\n                    resolve(finish)\n                })\n            })\n        }).reduce((nestedPromise, promise) => {\n            return nestedPromise.then(() => {\n                return promise.then(finish => finish())\n            })\n        }, Promise.resolve(() => {}))\n\n        // We've processed the handler stack. let's clear it.\n        this.showDirectiveStack = []\n        this.showDirectiveLastElement = undefined\n    }\n\n    updateElement(el, extraVars) {\n        this.resolveBoundAttributes(el, false, extraVars)\n    }\n\n    registerListeners(el, extraVars) {\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\n            switch (type) {\n                case 'on':\n                    registerListener(this, el, value, modifiers, expression, extraVars)\n                    break;\n\n                case 'model':\n                    registerModelListener(this, el, modifiers, expression, extraVars)\n                    break;\n                default:\n                    break;\n            }\n        })\n    }\n\n    resolveBoundAttributes(el, initialUpdate = false, extraVars) {\n        let attrs = getXAttrs(el)\n\n        attrs.forEach(({ type, value, modifiers, expression }) => {\n            switch (type) {\n                case 'model':\n                    handleAttributeBindingDirective(this, el, 'value', expression, extraVars)\n                    break;\n\n                case 'bind':\n                    // The :key binding on an x-for is special, ignore it.\n                    if (el.tagName.toLowerCase() === 'template' && value === 'key') return\n\n                    handleAttributeBindingDirective(this, el, value, expression, extraVars)\n                    break;\n\n                case 'text':\n                    var output = this.evaluateReturnExpression(el, expression, extraVars);\n\n                    // If nested model key is undefined, set the default value to empty string.\n                    if (output === undefined && expression.match(/\\./).length) {\n                        output = ''\n                    }\n\n                    el.innerText = output\n                    break;\n\n                case 'html':\n                    el.innerHTML = this.evaluateReturnExpression(el, expression, extraVars)\n                    break;\n\n                case 'show':\n                    var output = this.evaluateReturnExpression(el, expression, extraVars)\n\n                    handleShowDirective(this, el, output, modifiers, initialUpdate)\n                    break;\n\n                case 'if':\n                    // If this element also has x-for on it, don't process x-if.\n                    // We will let the \"x-for\" directive handle the \"if\"ing.\n                    if (attrs.filter(i => i.type === 'for').length > 0) return\n\n                    var output = this.evaluateReturnExpression(el, expression, extraVars)\n\n                    handleIfDirective(el, output, initialUpdate)\n                    break;\n\n                case 'for':\n                    handleForDirective(this, el, expression, initialUpdate)\n                    break;\n\n                case 'cloak':\n                    el.removeAttribute('x-cloak')\n                    break;\n\n                default:\n                    break;\n            }\n        })\n    }\n\n    evaluateReturnExpression(el, expression, extraVars = () => {}) {\n        return saferEval(expression, this.$data, {\n            ...extraVars(),\n            $dispatch: this.getDispatchFunction(el),\n        })\n    }\n\n    evaluateCommandExpression(el, expression, extraVars = () => {}) {\n        return saferEvalNoReturn(expression, this.$data, {\n            ...extraVars(),\n            $dispatch: this.getDispatchFunction(el),\n        })\n    }\n\n    getDispatchFunction (el) {\n        return (event, detail = {}) => {\n            el.dispatchEvent(new CustomEvent(event, {\n                detail,\n                bubbles: true,\n            }))\n        }\n    }\n\n    listenForNewElementsToInitialize() {\n        const targetNode = this.$el\n\n        const observerOptions = {\n            childList: true,\n            attributes: true,\n            subtree: true,\n        }\n\n        const observer = new MutationObserver((mutations) => {\n            for (let i=0; i < mutations.length; i++){\n                // Filter out mutations triggered from child components.\n                const closestParentComponent = mutations[i].target.closest('[x-data]')\n                if (! (closestParentComponent && closestParentComponent.isSameNode(this.$el))) return\n\n                if (mutations[i].type === 'attributes' && mutations[i].attributeName === 'x-data') {\n                    const rawData = saferEval(mutations[i].target.getAttribute('x-data'), {})\n\n                    Object.keys(rawData).forEach(key => {\n                        if (this.$data[key] !== rawData[key]) {\n                            this.$data[key] = rawData[key]\n                        }\n                    })\n                }\n\n                if (mutations[i].addedNodes.length > 0) {\n                    mutations[i].addedNodes.forEach(node => {\n                        if (node.nodeType !== 1) return\n\n                        if (node.matches('[x-data]')) {\n                            node.__x = new Component(node)\n                            return\n                        }\n\n                        this.initializeElements(node)\n                    })\n                }\n              }\n        })\n\n        observer.observe(targetNode, observerOptions);\n    }\n\n    getRefsProxy() {\n        var self = this\n\n        var refObj = {}\n\n        /* IE11-ONLY:START */\n            // Add any properties up-front that might be necessary for the Proxy polyfill.\n            refObj.$isRefsProxy = false;\n            refObj.$isAlpineProxy = false;\n\n            // If we are in IE, since the polyfill needs all properties to be defined before building the proxy,\n            // we just loop on the element, look for any x-ref and create a tmp property on a fake object.\n            this.walkAndSkipNestedComponents(self.$el, el => {\n                if (el.hasAttribute('x-ref')) {\n                    refObj[el.getAttribute('x-ref')] = true\n                }\n            })\n        /* IE11-ONLY:END */\n\n        // One of the goals of this is to not hold elements in memory, but rather re-evaluate\n        // the DOM when the system needs something from it. This way, the framework is flexible and\n        // friendly to outside DOM changes from libraries like Vue/Livewire.\n        // For this reason, I'm using an \"on-demand\" proxy to fake a \"$refs\" object.\n        return new Proxy(refObj, {\n            get(object, property) {\n                if (property === '$isAlpineProxy') return true\n\n                var ref\n\n                // We can't just query the DOM because it's hard to filter out refs in\n                // nested components.\n                self.walkAndSkipNestedComponents(self.$el, el => {\n                    if (el.hasAttribute('x-ref') && el.getAttribute('x-ref') === property) {\n                        ref = el\n                    }\n                })\n\n                return ref\n            }\n        })\n    }\n}\n","import { transitionIn, transitionOut } from '../utils'\n\nexport function handleShowDirective(component, el, value, modifiers, initialUpdate = false) {\n    const hide = () => {\n        el.style.display = 'none'\n    }\n\n    const show = () => {\n        if (el.style.length === 1 && el.style.display === 'none') {\n            el.removeAttribute('style')\n        } else {\n            el.style.removeProperty('display')\n        }\n    }\n\n    if (initialUpdate === true) {\n        if (value) {\n            show()\n        } else {\n            hide()\n        }\n        return\n    }\n\n    const handle = (resolve) => {\n        if (! value) {\n            if ( el.style.display !== 'none' ) {\n                transitionOut(el, () => {\n                    resolve(() => {\n                        hide()\n                    })\n                })\n            } else {\n                resolve(() => {})\n            }\n        } else {\n            if ( el.style.display !== '' ) {\n                transitionIn(el, () => {\n                    show()\n                })\n            }\n\n            // Resolve immediately, only hold up parent `x-show`s for hidin.\n            resolve(() => {})\n        }\n    }\n\n    // The working of x-show is a bit complex because we need to\n    // wait for any child transitions to finish before hiding\n    // some element. Also, this has to be done recursively.\n\n    // If x-show.immediate, foregoe the waiting.\n    if (modifiers.includes('immediate')) {\n        handle(finish => finish())\n        return\n    }\n\n    // x-show is encountered during a DOM tree walk. If an element\n    // we encounter is NOT a child of another x-show element we\n    // can execute the previous x-show stack (if one exists).\n    if (component.showDirectiveLastElement && ! component.showDirectiveLastElement.contains(el)) {\n        component.executeAndClearRemainingShowDirectiveStack()\n    }\n\n    // We'll push the handler onto a stack to be handled later.\n    component.showDirectiveStack.push(handle)\n\n    component.showDirectiveLastElement = el\n}\n","import { transitionIn, transitionOut } from '../utils'\n\nexport function handleIfDirective(el, expressionResult, initialUpdate) {\n    if (el.nodeName.toLowerCase() !== 'template') console.warn(`Alpine: [x-if] directive should only be added to <template> tags. See https://github.com/alpinejs/alpine#x-if`)\n\n    const elementHasAlreadyBeenAdded = el.nextElementSibling && el.nextElementSibling.__x_inserted_me === true\n\n    if (expressionResult && ! elementHasAlreadyBeenAdded) {\n        const clone = document.importNode(el.content, true);\n\n        el.parentElement.insertBefore(clone, el.nextElementSibling)\n\n        el.nextElementSibling.__x_inserted_me = true\n\n        transitionIn(el.nextElementSibling, () => {}, initialUpdate)\n    } else if (! expressionResult && elementHasAlreadyBeenAdded) {\n        transitionOut(el.nextElementSibling, () => {\n            el.nextElementSibling.remove()\n        }, initialUpdate)\n    }\n}\n","import Component from './component'\nimport { domReady, isTesting } from './utils'\n\nconst Alpine = {\n    start: async function () {\n        if (! isTesting()) {\n            await domReady()\n        }\n\n        this.discoverComponents(el => {\n            this.initializeComponent(el)\n        })\n\n        // It's easier and more performant to just support Turbolinks than listen\n        // to MutationObserver mutations at the document level.\n        document.addEventListener(\"turbolinks:load\", () => {\n            this.discoverUninitializedComponents(el => {\n                this.initializeComponent(el)\n            })\n        })\n\n        this.listenForNewUninitializedComponentsAtRunTime(el => {\n            this.initializeComponent(el)\n        })\n    },\n\n    discoverComponents: function (callback) {\n        const rootEls = document.querySelectorAll('[x-data]');\n\n        rootEls.forEach(rootEl => {\n            callback(rootEl)\n        })\n    },\n\n    discoverUninitializedComponents: function (callback, el = null) {\n        const rootEls = (el || document).querySelectorAll('[x-data]');\n\n        Array.from(rootEls)\n            .filter(el => el.__x === undefined)\n            .forEach(rootEl => {\n                callback(rootEl)\n            })\n    },\n\n    listenForNewUninitializedComponentsAtRunTime: function (callback) {\n        const targetNode = document.querySelector('body');\n\n        const observerOptions = {\n            childList: true,\n            attributes: true,\n            subtree: true,\n        }\n\n        const observer = new MutationObserver((mutations) => {\n            for (let i=0; i < mutations.length; i++){\n                if (mutations[i].addedNodes.length > 0) {\n                    mutations[i].addedNodes.forEach(node => {\n                        // Discard non-element nodes (like line-breaks)\n                        if (node.nodeType !== 1) return\n\n                        // Discard any changes happening within an existing component.\n                        // They will take care of themselves.\n                        if (node.parentElement && node.parentElement.closest('[x-data]')) return\n\n                        this.discoverUninitializedComponents((el) => {\n                            this.initializeComponent(el)\n                        }, node.parentElement)\n                    })\n                }\n              }\n        })\n\n        observer.observe(targetNode, observerOptions)\n    },\n\n    initializeComponent: function (el) {\n        if (! el.__x) {\n            el.__x = new Component(el)\n        }\n    },\n\n    clone: function (component, newEl) {\n        if (! newEl.__x) {\n            newEl.__x = new Component(newEl, component.getUnobservedData())\n        }\n    }\n}\n\nif (! isTesting()) {\n    window.Alpine = Alpine\n    window.Alpine.start()\n}\n\nexport default Alpine\n"],"names":["arrayUnique","array","a","concat","i","length","j","splice","isTesting","navigator","userAgent","includes","debounce","func","wait","timeout","context","this","args","arguments","later","apply","clearTimeout","setTimeout","saferEval","expression","dataContext","additionalHelperVariables","Function","Object","keys","values","isXAttr","attr","name","replaceAtAndColonWithStandardSyntax","test","getXAttrs","el","type","Array","from","attributes","filter","map","typeMatch","match","valueMatch","modifiers","value","replace","startsWith","transitionIn","show","forceSkip","attrs","showAttr","settingBothSidesOfTransition","index","indexOf","showCallback","styleValues","duration","modifierValue","origin","first","opacity","scale","second","transitionHelper","transitionHelperIn","directives","enter","find","split","enterStart","enterEnd","transitionClasses","transitionClassesIn","transitionOut","hide","hideCallback","transitionHelperOut","leave","leaveStart","leaveEnd","transitionClassesOut","key","fallback","rawValue","isNaN","join","hook1","hook2","opacityCache","style","transformCache","transform","transformOriginCache","transformOrigin","noModifiers","transitionOpacity","transitionScale","stages","start","during","transitionProperty","trim","transitionDuration","transitionTimingFunction","end","cleanup","transition","classesDuring","classesStart","classesEnd","originalClasses","__x_original_classes","classList","add","remove","requestAnimationFrame","Number","getComputedStyle","isConnected","deepProxy","target","proxyHandler","functionHandler","Node","property","getPrototypeOf","prototype","getOwnPropertyNames","item","forEach","Proxy","handleForDirective","component","initialUpdate","tagName","toLowerCase","console","warn","single","bunch","iterator1","iterator2","forIteratorRE","inMatch","res","iteratorMatch","parseFor","items","ifAttr","evaluateReturnExpression","previousEl","group","currentKey","keyAttr","keyAliases","getThisIterationsKeyFromTemplateTag","currentEl","nextElementSibling","undefined","__x_for_key","tmpCurrentEl","parentElement","insertBefore","xForVars","__x_for","updateElements","clone","document","importNode","content","childElementCount","initializeElements","nextElementFromOldLoop","nextElementFromOldLoopImmutable","nextSibling","handleAttributeBindingDirective","attrName","extraVars","checked","isArray","valueFound","val","arrayWrappedValue","options","option","selected","text","updateSelect","setAttribute","classNames","className","newClasses","removeAttribute","registerListener","event","handler","e","contains","offsetWidth","offsetHeight","runListenerHandler","removeEventListener","addEventListener","listenerTarget","window","isKeyEvent","keyModifiers","keyToModifier","selectedSystemKeyModifiers","modifier","isListeningForASpecificKeyThatHasntBeenPressed","preventDefault","stopPropagation","evaluateCommandExpression","generateModelAssignmentFunction","hasAttribute","currentValue","CustomEvent","detail","multiple","selectedOptions","parseFloat","Component","constructor","seedDataForCloning","$el","dataAttr","getAttribute","dataExpression","initExpression","unobservedData","$refs","$nextTick","pauseReactivity","call","rawData","initReturnedCallback","self","data","walk","callback","node","firstElementChild","reverse","showDirectiveStack","rightSideOfExpression","display","removeProperty","handle","resolve","finish","showDirectiveLastElement","executeAndClearRemainingShowDirectiveStack","push","innerHTML","output","expressionResult","nodeName","elementHasAlreadyBeenAdded","__x_inserted_me","handleShowDirective","handleIfDirective","observer","mutations","$data","refObj","Alpine","async","Promise","readyState","discoverComponents","initializeComponent","discoverUninitializedComponents","listenForNewUninitializedComponentsAtRunTime","querySelectorAll","rootEl","rootEls","__x","targetNode","querySelector","MutationObserver","addedNodes","nodeType","closest","observe","childList","subtree","newEl","getUnobservedData"],"mappings":"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"}