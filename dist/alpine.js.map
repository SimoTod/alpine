{"version":3,"file":"alpine.js","sources":["../src/utils.js","../src/directives/for.js","../src/directives/bind.js","../src/directives/on.js","../src/directives/model.js","../src/component.js","../src/directives/show.js","../src/directives/if.js","../src/index.js"],"sourcesContent":["\n// Thanks @stimulus:\n// https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\nexport function domReady() {\n    return new Promise(resolve => {\n        if (document.readyState == \"loading\") {\n            document.addEventListener(\"DOMContentLoaded\", resolve)\n        } else {\n            resolve()\n        }\n    })\n}\n\nexport function arrayUnique(array) {\n    var a = array.concat();\n    for(var i=0; i<a.length; ++i) {\n        for(var j=i+1; j<a.length; ++j) {\n            if(a[i] === a[j])\n                a.splice(j--, 1);\n        }\n    }\n\n    return a;\n}\n\nexport function isTesting() {\n    return navigator.userAgent, navigator.userAgent.includes(\"Node.js\")\n        || navigator.userAgent.includes(\"jsdom\")\n}\n\nexport function kebabCase(subject) {\n    return subject.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[_\\s]/, '-').toLowerCase()\n}\n\nexport function walk(el, callback) {\n    if (callback(el) === false) return\n\n    let node = el.firstElementChild\n\n    while (node) {\n        walk(node, callback)\n\n        node = node.nextElementSibling\n    }\n}\n\nexport function debounce(func, wait) {\n    var timeout\n    return function () {\n        var context = this, args = arguments\n        var later = function () {\n            timeout = null\n            func.apply(context, args)\n        }\n        clearTimeout(timeout)\n        timeout = setTimeout(later, wait)\n    }\n}\n\nexport function saferEval(expression, dataContext, additionalHelperVariables = {}) {\n    return (new Function(['$data', ...Object.keys(additionalHelperVariables)], `var result; with($data) { result = ${expression} }; return result`))(\n        dataContext, ...Object.values(additionalHelperVariables)\n    )\n}\n\nexport function saferEvalNoReturn(expression, dataContext, additionalHelperVariables = {}) {\n    return (new Function(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { ${expression} }`))(\n        dataContext, ...Object.values(additionalHelperVariables)\n    )\n}\n\nexport function isXAttr(attr) {\n    const name = replaceAtAndColonWithStandardSyntax(attr.name)\n\n    const xAttrRE = /x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref)/\n\n    return xAttrRE.test(name)\n}\n\nexport function getXAttrs(el, type) {\n    return Array.from(el.attributes)\n        .filter(isXAttr)\n        .map(attr => {\n            const name = replaceAtAndColonWithStandardSyntax(attr.name)\n\n            const typeMatch = name.match(/x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref)/)\n            const valueMatch = name.match(/:([a-zA-Z\\-:]+)/)\n            const modifiers = name.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || []\n\n            return {\n                type: typeMatch ? typeMatch[1] : null,\n                value: valueMatch ? valueMatch[1] : null,\n                modifiers: modifiers.map(i => i.replace('.', '')),\n                expression: attr.value,\n            }\n        })\n        .filter(i => {\n            // If no type is passed in for filtering, bypassfilter\n            if (! type) return true\n\n            return i.type === type\n        })\n}\n\nexport function replaceAtAndColonWithStandardSyntax(name) {\n    if (name.startsWith('@')) {\n        return name.replace('@', 'x-on:')\n    } else if (name.startsWith(':')) {\n        return name.replace(':', 'x-bind:')\n    }\n\n    return name\n}\n\nexport function transitionIn(el, callback, forceSkip = false) {\n    if (forceSkip) return callback()\n\n    const attrs = getXAttrs(el, 'transition')\n\n    if (attrs.length < 1) return callback()\n\n    const enter = (attrs.find(i => i.value === 'enter') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const enterStart = (attrs.find(i => i.value === 'enter-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const enterEnd = (attrs.find(i => i.value === 'enter-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n\n    transition(el, enter, enterStart, enterEnd, callback, () => {})\n}\n\nexport function transitionOut(el, callback, forceSkip = false) {\n    if (forceSkip) return callback()\n\n    const attrs = getXAttrs(el, 'transition')\n\n    if (attrs.length < 1) return callback()\n\n    const leave = (attrs.find(i => i.value === 'leave') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const leaveStart = (attrs.find(i => i.value === 'leave-start') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n    const leaveEnd = (attrs.find(i => i.value === 'leave-end') || { expression: '' }).expression.split(' ').filter(i => i !== '')\n\n    transition(el, leave, leaveStart, leaveEnd, () => {}, callback)\n}\n\nexport function transition(el, classesDuring, classesStart, classesEnd, hook1, hook2) {\n    const originalClasses = el.__x_original_classes || []\n    el.classList.add(...classesStart)\n    el.classList.add(...classesDuring)\n\n    requestAnimationFrame(() => {\n        const duration = Number(getComputedStyle(el).transitionDuration.replace('s', '')) * 1000\n\n        hook1()\n\n        requestAnimationFrame(() => {\n            // Don't remove classes that were in the original class attribute.\n            el.classList.remove(...classesStart.filter(i => !originalClasses.includes(i)))\n            el.classList.add(...classesEnd)\n\n            setTimeout(() => {\n                hook2()\n\n                // Adding an \"isConnected\" check, in case the callback\n                // removed the element from the DOM.\n                if (el.isConnected) {\n                    el.classList.remove(...classesDuring.filter(i => !originalClasses.includes(i)))\n                    el.classList.remove(...classesEnd.filter(i => !originalClasses.includes(i)))\n                }\n            }, duration);\n        })\n    });\n}\n","import { transitionIn, transitionOut, getXAttrs } from '../utils'\n\nexport function handleForDirective(component, el, expression, initialUpdate) {\n    const { single, bunch, iterator1, iterator2 } = parseFor(expression)\n\n    var items = component.evaluateReturnExpression(el, bunch)\n\n    // As we walk the array, we'll also walk the DOM (updating/creating as we go).\n    var previousEl = el\n    items.forEach((i, index, group) => {\n        const currentKey = getThisIterationsKeyFromTemplateTag(component, el, single, iterator1, iterator2, i, index, group)\n        let currentEl = previousEl.nextElementSibling\n\n        // Let's check and see if the x-for has already generated an element last time it ran.\n        if (currentEl && currentEl.__x_for_key !== undefined) {\n            // If the the key's don't match.\n            if (currentEl.__x_for_key !== currentKey) {\n                // We'll look ahead to see if we can find it further down.\n                var tmpCurrentEl = currentEl\n                while(tmpCurrentEl) {\n                    // If we found it later in the DOM.\n                    if (tmpCurrentEl.__x_for_key === currentKey) {\n                        // Move it to where it's supposed to be in the DOM.\n                        el.parentElement.insertBefore(tmpCurrentEl, currentEl)\n                        // And set it as the current element as if we just created it.\n                        currentEl = tmpCurrentEl\n                        break\n                    }\n\n                    tmpCurrentEl = (tmpCurrentEl.nextElementSibling && tmpCurrentEl.nextElementSibling.__x_for_key !== undefined) ? tmpCurrentEl.nextElementSibling : false\n                }\n            }\n\n            // Temporarily remove the key indicator to allow the normal \"updateElements\" to work\n            delete currentEl.__x_for_key\n\n            currentEl.__x_for_alias = single\n            currentEl.__x_for_value = i\n            component.updateElements(currentEl, () => {\n                return {[currentEl.__x_for_alias]: currentEl.__x_for_value}\n            })\n        } else {\n            // There are no more .__x_for_key elements, meaning the page is first loading, OR, there are\n            // extra items in the array that need to be added as new elements.\n\n            // Let's create a clone from the template.\n            const clone = document.importNode(el.content, true);\n            // Insert it where we are in the DOM.\n            el.parentElement.insertBefore(clone, currentEl)\n\n            // Set it as the current element.\n            currentEl = previousEl.nextElementSibling\n\n            // And transition it in if it's not the first page load.\n            transitionIn(currentEl, () => {}, initialUpdate)\n\n            // Now, let's walk the new DOM node and initialize everything,\n            // including new nested components.\n            // Note we are resolving the \"extraData\" alias stuff from the dom element value so that it's\n            // always up to date for listener handlers that don't get re-registered.\n            currentEl.__x_for_alias = single\n            currentEl.__x_for_value = i\n            component.initializeElements(currentEl, () => {\n                return {[currentEl.__x_for_alias]: currentEl.__x_for_value}\n            })\n        }\n\n        currentEl.__x_for_key = currentKey\n\n        previousEl = currentEl\n    })\n\n    // Now that we've added/updated/moved all the elements for the current state of the loop.\n    // Anything left over, we can get rid of.\n    var nextElementFromOldLoop = (previousEl.nextElementSibling && previousEl.nextElementSibling.__x_for_key !== undefined) ? previousEl.nextElementSibling : false\n\n    while(nextElementFromOldLoop) {\n        const nextElementFromOldLoopImmutable = nextElementFromOldLoop\n        const nextSibling = nextElementFromOldLoop.nextElementSibling\n\n        transitionOut(nextElementFromOldLoop, () => {\n            nextElementFromOldLoopImmutable.remove()\n        })\n\n        nextElementFromOldLoop = (nextSibling && nextSibling.__x_for_key !== undefined) ? nextSibling : false\n    }\n}\n\n// This was taken from VueJS 2.* core. Thanks Vue!\nfunction parseFor (expression) {\n    const forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/\n    const stripParensRE = /^\\(|\\)$/g\n    const forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/\n\n    const inMatch = expression.match(forAliasRE)\n    if (! inMatch) return\n    const res = {}\n    res.bunch = inMatch[2].trim()\n    const single = inMatch[1].trim().replace(stripParensRE, '')\n    const iteratorMatch = single.match(forIteratorRE)\n    if (iteratorMatch) {\n        res.single = single.replace(forIteratorRE, '').trim()\n        res.iterator1 = iteratorMatch[1].trim()\n        if (iteratorMatch[2]) {\n            res.iterator2 = iteratorMatch[2].trim()\n        }\n    } else {\n        res.single = single\n    }\n    return res\n  }\n\nfunction getThisIterationsKeyFromTemplateTag(component, el, single, iterator1, iterator2, i, index, group) {\n    const keyAttr = getXAttrs(el, 'bind').filter(attr => attr.value === 'key')[0]\n\n    let keyAliases = { [single]: i }\n    if (iterator1) keyAliases[iterator1] = index\n    if (iterator2) keyAliases[iterator2] = group\n\n    return keyAttr\n        ? component.evaluateReturnExpression(el, keyAttr.expression, () => keyAliases)\n        : index\n}\n","import { arrayUnique } from '../utils'\n\nexport function handleAttributeBindingDirective(component, el, attrName, expression, extraVars) {\n    var value = component.evaluateReturnExpression(el, expression, extraVars)\n\n    if (attrName === 'value') {\n        // If nested model key is undefined, set the default value to empty string.\n        if (value === undefined && expression.match(/\\./).length) {\n            value = ''\n        }\n\n        if (el.type === 'radio') {\n            el.checked = el.value == value\n        } else if (el.type === 'checkbox') {\n            if (Array.isArray(value)) {\n                // I'm purposely not using Array.includes here because it's\n                // strict, and because of Numeric/String mis-casting, I\n                // want the \"includes\" to be \"fuzzy\".\n                let valueFound = false\n                value.forEach(val => {\n                    if (val == el.value) {\n                        valueFound = true\n                    }\n                })\n\n                el.checked = valueFound\n            } else {\n                el.checked = !! value\n            }\n        } else if (el.tagName === 'SELECT') {\n            updateSelect(el, value)\n        } else {\n            el.value = value\n        }\n    } else if (attrName === 'class') {\n        if (Array.isArray(value)) {\n            const originalClasses = el.__x_original_classes || []\n            el.setAttribute('class', arrayUnique(originalClasses.concat(value)).join(' '))\n        } else if (typeof value === 'object') {\n            Object.keys(value).forEach(classNames => {\n                if (value[classNames]) {\n                    classNames.split(' ').forEach(className => el.classList.add(className))\n                } else {\n                    classNames.split(' ').forEach(className => el.classList.remove(className))\n                }\n            })\n        } else {\n            const originalClasses = el.__x_original_classes || []\n            const newClasses = value.split(' ')\n            el.setAttribute('class', arrayUnique(originalClasses.concat(newClasses)).join(' '))\n        }\n    } else if (['disabled', 'readonly', 'required', 'checked', 'hidden', 'selected'].includes(attrName)) {\n        // Boolean attributes have to be explicitly added and removed, not just set.\n        if (!! value) {\n            el.setAttribute(attrName, '')\n        } else {\n            el.removeAttribute(attrName)\n        }\n    } else {\n        el.setAttribute(attrName, value)\n    }\n}\n\nfunction updateSelect(el, value) {\n    const arrayWrappedValue = [].concat(value).map(value => { return value + '' })\n\n    Array.from(el.options).forEach(option => {\n        option.selected = arrayWrappedValue.includes(option.value || option.text)\n    })\n}\n","import { kebabCase } from '../utils'\n\nexport function registerListener(component, el, event, modifiers, expression, extraVars = {}) {\n    if (modifiers.includes('away')) {\n        const handler = e => {\n            // Don't do anything if the click came form the element or within it.\n            if (el.contains(e.target)) return\n\n            // Don't do anything if this element isn't currently visible.\n            if (el.offsetWidth < 1 && el.offsetHeight < 1) return\n\n            // Now that we are sure the element is visible, AND the click\n            // is from outside it, let's run the expression.\n            runListenerHandler(component, expression, e, extraVars)\n\n            if (modifiers.includes('once')) {\n                document.removeEventListener(event, handler)\n            }\n        }\n\n        // Listen for this event at the root level.\n        document.addEventListener(event, handler)\n    } else {\n        const listenerTarget = modifiers.includes('window')\n            ? window : (modifiers.includes('document') ? document : el)\n\n        const handler = e => {\n            if (isKeyEvent(event)) {\n                if (isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers)) {\n                    return\n                }\n            }\n\n            if (modifiers.includes('prevent')) e.preventDefault()\n            if (modifiers.includes('stop')) e.stopPropagation()\n\n            runListenerHandler(component, expression, e, extraVars)\n\n            if (modifiers.includes('once')) {\n                listenerTarget.removeEventListener(event, handler)\n            }\n        }\n\n        listenerTarget.addEventListener(event, handler)\n    }\n}\n\nfunction runListenerHandler(component, expression, e, extraVars) {\n    component.evaluateCommandExpression(e.target, expression, () => {\n        return {...extraVars(), '$event': e}\n    })\n}\n\nfunction isKeyEvent(event) {\n    return ['keydown', 'keyup'].includes(event)\n}\n\nfunction isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers) {\n    let keyModifiers = modifiers.filter(i => {\n        return ! ['window', 'document', 'prevent', 'stop'].includes(i)\n    })\n\n    // If no modifier is specified, we'll call it a press.\n    if (keyModifiers.length === 0) return false\n\n    // If one is passed, AND it matches the key pressed, we'll call it a press.\n    if (keyModifiers.length === 1 && keyModifiers[0] === keyToModifier(e.key)) return false\n\n    // The user is listening for key combinations.\n    const systemKeyModifiers = ['ctrl', 'shift', 'alt', 'meta', 'cmd', 'super']\n    const selectedSystemKeyModifiers = systemKeyModifiers.filter(modifier => keyModifiers.includes(modifier))\n\n    keyModifiers = keyModifiers.filter(i => ! selectedSystemKeyModifiers.includes(i))\n\n    if (selectedSystemKeyModifiers.length > 0) {\n        const activelyPressedKeyModifiers = selectedSystemKeyModifiers.filter(modifier => {\n            // Alias \"cmd\" and \"super\" to \"meta\"\n            if (modifier === 'cmd' || modifier === 'super') modifier = 'meta'\n\n            return e[`${modifier}Key`]\n        })\n\n        // If all the modifiers selected are pressed, ...\n        if (activelyPressedKeyModifiers.length === selectedSystemKeyModifiers.length) {\n            // AND the remaining key is pressed as well. It's a press.\n            if (keyModifiers[0] === keyToModifier(e.key)) return false\n        }\n    }\n\n    // We'll call it NOT a valid keypress.\n    return true\n}\n\nfunction keyToModifier(key) {\n    switch (key) {\n        case '/':\n            return 'slash'\n        case ' ':\n        case 'Spacebar':\n            return 'space'\n        default:\n            return kebabCase(key)\n    }\n}\n","import { registerListener } from './on'\n\nexport function registerModelListener(component, el, modifiers, expression, extraVars) {\n    // If the element we are binding to is a select, a radio, or checkbox\n    // we'll listen for the change event instead of the \"input\" event.\n    var event = (el.tagName.toLowerCase() === 'select')\n        || ['checkbox', 'radio'].includes(el.type)\n        || modifiers.includes('lazy')\n        ? 'change' : 'input'\n\n    const listenerExpression = `${expression} = rightSideOfExpression($event, ${expression})`\n\n    registerListener(component, el, event, modifiers, listenerExpression, () => {\n        return {\n            ...extraVars(),\n            rightSideOfExpression: generateModelAssignmentFunction(el, modifiers, expression),\n        }\n    })\n}\n\nfunction generateModelAssignmentFunction(el, modifiers, expression) {\n    if (el.type === 'radio') {\n        // Radio buttons only work properly when they share a name attribute.\n        // People might assume we take care of that for them, because\n        // they already set a shared \"x-model\" attribute.\n        if (! el.hasAttribute('name')) el.setAttribute('name', expression)\n    }\n\n    return (event, currentValue) => {\n        if (event instanceof CustomEvent) {\n            return event.detail\n        } else if (el.type === 'checkbox') {\n            // If the data we are binding to is an array, toggle it's value inside the array.\n            if (Array.isArray(currentValue)) {\n                return event.target.checked ? currentValue.concat([event.target.value]) : currentValue.filter(i => i !== event.target.value)\n            } else {\n                return event.target.checked\n            }\n        } else if (el.tagName.toLowerCase() === 'select' && el.multiple) {\n            return modifiers.includes('number')\n                ? Array.from(event.target.selectedOptions).map(option => { return parseFloat(option.value || option.text) })\n                : Array.from(event.target.selectedOptions).map(option => { return option.value || option.text })\n        } else {\n            return modifiers.includes('number')\n                ? parseFloat(event.target.value)\n                : (modifiers.includes('trim') ? event.target.value.trim() : event.target.value)\n        }\n    }\n}\n","import { walk, saferEval, saferEvalNoReturn, getXAttrs, debounce } from './utils'\nimport { handleForDirective } from './directives/for'\nimport { handleAttributeBindingDirective } from './directives/bind'\nimport { handleShowDirective } from './directives/show'\nimport { handleIfDirective } from './directives/if'\nimport { registerModelListener } from './directives/model'\nimport { registerListener } from './directives/on'\n\nexport default class Component {\n    constructor(el) {\n        this.$el = el\n\n        const dataAttr = this.$el.getAttribute('x-data')\n        const dataExpression = dataAttr === '' ? '{}' : dataAttr\n        const initExpression = this.$el.getAttribute('x-init')\n        const createdExpression = this.$el.getAttribute('x-created')\n        const mountedExpression = this.$el.getAttribute('x-mounted')\n\n        const unobservedData = saferEval(dataExpression, {})\n\n        // Construct a Proxy-based observable. This will be used to handle reactivity.\n        this.$data = this.wrapDataInObservable(unobservedData)\n\n        // After making user-supplied data methods reactive, we can now add\n        // our magic properties to the original data for access.\n        unobservedData.$el = this.$el\n        unobservedData.$refs = this.getRefsProxy()\n\n        this.nextTickStack = []\n        unobservedData.$nextTick = (callback) => {\n            this.nextTickStack.push(callback)\n        }\n\n        var initReturnedCallback\n        if (initExpression) {\n            // We want to allow data manipulation, but not trigger DOM updates just yet.\n            // We haven't even initialized the elements with their Alpine bindings. I mean c'mon.\n            this.pauseReactivity = true\n            initReturnedCallback = this.evaluateReturnExpression(this.$el, initExpression)\n            this.pauseReactivity = false\n        }\n\n        if (createdExpression) {\n            console.warn('AlpineJS Warning: \"x-created\" is deprecated and will be removed in the next major version. Use \"x-init\" instead.')\n            this.pauseReactivity = true\n            saferEvalNoReturn(this.$el.getAttribute('x-created'), this.$data)\n            this.pauseReactivity = false\n        }\n\n        // Register all our listeners and set all our attribute bindings.\n        this.initializeElements(this.$el)\n\n        // Use mutation observer to detect new elements being added within this component at run-time.\n        // Alpine's just so darn flexible amirite?\n        this.listenForNewElementsToInitialize()\n\n        if (typeof initReturnedCallback === 'function') {\n            // Run the callback returned form the \"x-init\" hook to allow the user to do stuff after\n            // Alpine's got it's grubby little paws all over everything.\n            initReturnedCallback.call(this.$data)\n        }\n\n        if (mountedExpression) {\n            console.warn('AlpineJS Warning: \"x-mounted\" is deprecated and will be removed in the next major version. Use \"x-init\" (with a callback return) for the same behavior.')\n            // Run an \"x-mounted\" hook to allow the user to do stuff after\n            // Alpine's got it's grubby little paws all over everything.\n            saferEvalNoReturn(mountedExpression, this.$data)\n        }\n    }\n\n    wrapDataInObservable(data) {\n        var self = this\n\n        const proxyHandler = {\n            set(obj, property, value) {\n                // If value is an Alpine proxy (i.e. an element returned when sorting a list of objects),\n                // we want to set the original element to avoid a matryoshka effect (nested proxies).\n                const setWasSuccessful = value['$isAlpineProxy']\n                    ? Reflect.set(obj, property, value['$originalTarget'])\n                    : Reflect.set(obj, property, value)\n\n                // Don't react to data changes for cases like the `x-created` hook.\n                if (self.pauseReactivity) return setWasSuccessful\n\n                debounce(() => {\n                    self.updateElements(self.$el)\n\n                    // Walk through the $nextTick stack and clear it as we go.\n                    while (self.nextTickStack.length > 0) {\n                        self.nextTickStack.shift()()\n                    }\n                }, 0)()\n\n                return setWasSuccessful\n            },\n            get(target, key) {\n                // Provide a way to determine if this object is an Alpine proxy or not.\n                if (key === \"$isAlpineProxy\") return true\n\n                // Provide a hook to access the underlying \"proxied\" data directly.\n                if (key === \"$originalTarget\") return target\n\n                // If the property we are trying to get is a proxy, just return it.\n                // Like in the case of $refs\n                if (target[key] && target[key].$isRefsProxy) return target[key]\n\n                // If property is a DOM node, just return it. (like in the case of this.$el)\n                if (target[key] && target[key] instanceof Node) return target[key]\n\n                // If accessing a nested property, return this proxy recursively.\n                // This enables reactivity on setting nested data.\n                if (typeof target[key] === 'object' && target[key] !== null) {\n                    return new Proxy(target[key], proxyHandler)\n                }\n\n                // If none of the above, just return the flippin' value. Gawsh.\n                return target[key]\n            },\n            deleteProperty(target, key) {\n                if (key in target) {\n                    const deleteWasSuccessful = Reflect.deleteProperty(target, key)\n\n                    if (self.pauseReactivity) return setWasSuccessful\n\n                    debounce(() => {\n                        self.updateElements(self.$el)\n\n                        // Walk through the $nextTick stack and clear it as we go.\n                        while (self.nextTickStack.length > 0) {\n                            self.nextTickStack.shift()()\n                        }\n                    }, 0)()\n\n                    return deleteWasSuccessful\n                }\n\n                return true\n            }\n        }\n\n        return new Proxy(data, proxyHandler)\n    }\n\n    walkAndSkipNestedComponents(el, callback, initializeComponentCallback = () => {}) {\n        walk(el, el => {\n            // We've hit a component.\n            if (el.hasAttribute('x-data')) {\n                // If it's not the current one.\n                if (! el.isSameNode(this.$el)) {\n                    // Initialize it if it's not.\n                    if (! el.__x) initializeComponentCallback(el)\n\n                    // Now we'll let that sub-component deal with itself.\n                    return false\n                }\n            }\n\n            return callback(el)\n        })\n    }\n\n    initializeElements(rootEl, extraVars = () => {}) {\n        this.walkAndSkipNestedComponents(rootEl, el => {\n            // Don't touch spawns from for loop\n            if (el.__x_for_key !== undefined) return false\n\n            this.initializeElement(el, extraVars)\n        }, el => {\n            el.__x = new Component(el)\n        })\n\n        // Walk through the $nextTick stack and clear it as we go.\n        while (this.nextTickStack.length > 0) {\n            this.nextTickStack.shift()()\n        }\n    }\n\n    initializeElement(el, extraVars) {\n        // To support class attribute merging, we have to know what the element's\n        // original class attribute looked like for reference.\n        if (el.hasAttribute('class') && getXAttrs(el).length > 0) {\n            el.__x_original_classes = el.getAttribute('class').split(' ')\n        }\n\n        this.registerListeners(el, extraVars)\n        this.resolveBoundAttributes(el, true, extraVars)\n    }\n\n    updateElements(rootEl, extraVars = () => {}) {\n        this.walkAndSkipNestedComponents(rootEl, el => {\n            // Don't touch spawns from for loop (and check if the root is actually a for loop in a parent, don't skip it.)\n            if (el.__x_for_key !== undefined && ! el.isSameNode(this.$el)) return false\n\n            this.updateElement(el, extraVars)\n        }, el => {\n            el.__x = new Component(el)\n        })\n    }\n\n    updateElement(el, extraVars) {\n        this.resolveBoundAttributes(el, false, extraVars)\n    }\n\n    registerListeners(el, extraVars) {\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\n            switch (type) {\n                case 'on':\n                    registerListener(this, el, value, modifiers, expression, extraVars)\n                    break;\n\n                case 'model':\n                    registerModelListener(this, el, modifiers, expression, extraVars)\n                    break;\n                default:\n                    break;\n            }\n        })\n    }\n\n    resolveBoundAttributes(el, initialUpdate = false, extraVars) {\n        getXAttrs(el).forEach(({ type, value, modifiers, expression }) => {\n            switch (type) {\n                case 'model':\n                    handleAttributeBindingDirective(this, el, 'value', expression, extraVars)\n                    break;\n\n                case 'bind':\n                    // The :key binding on an x-for is special, ignore it.\n                    if (el.tagName.toLowerCase() === 'template' && value === 'key') return\n\n                    handleAttributeBindingDirective(this, el, value, expression, extraVars)\n                    break;\n\n                case 'text':\n                    var output = this.evaluateReturnExpression(el, expression, extraVars);\n\n                    // If nested model key is undefined, set the default value to empty string.\n                    if (output === undefined && expression.match(/\\./).length) {\n                        output = ''\n                    }\n\n                    el.innerText = output\n                    break;\n\n                case 'html':\n                    el.innerHTML = this.evaluateReturnExpression(el, expression, extraVars)\n                    break;\n\n                case 'show':\n                    var output = this.evaluateReturnExpression(el, expression, extraVars)\n\n                    handleShowDirective(el, output, initialUpdate)\n                    break;\n\n                case 'if':\n                    var output = this.evaluateReturnExpression(el, expression, extraVars)\n\n                    handleIfDirective(el, output, initialUpdate)\n                    break;\n\n                case 'for':\n                    handleForDirective(this, el, expression, initialUpdate)\n                    break;\n\n                case 'cloak':\n                    el.removeAttribute('x-cloak')\n                    break;\n\n                default:\n                    break;\n            }\n        })\n    }\n\n    evaluateReturnExpression(el, expression, extraVars = () => {}) {\n        return saferEval(expression, this.$data, {\n            ...extraVars(),\n            $dispatch: this.getDispatchFunction(el),\n        })\n    }\n\n    evaluateCommandExpression(el, expression, extraVars = () => {}) {\n        saferEvalNoReturn(expression, this.$data, {\n            ...extraVars(),\n            $dispatch: this.getDispatchFunction(el),\n        })\n    }\n\n    getDispatchFunction (el) {\n        return (event, detail = {}) => {\n            el.dispatchEvent(new CustomEvent(event, {\n                detail,\n                bubbles: true,\n            }))\n        }\n    }\n\n    listenForNewElementsToInitialize() {\n        const targetNode = this.$el\n\n        const observerOptions = {\n            childList: true,\n            attributes: true,\n            subtree: true,\n        }\n\n        const observer = new MutationObserver((mutations) => {\n            for (let i=0; i < mutations.length; i++){\n                // Filter out mutations triggered from child components.\n                const closestParentComponent = mutations[i].target.closest('[x-data]')\n                if (! (closestParentComponent && closestParentComponent.isSameNode(this.$el))) return\n\n                if (mutations[i].type === 'attributes' && mutations[i].attributeName === 'x-data') {\n                    const rawData = saferEval(mutations[i].target.getAttribute('x-data'), {})\n\n                    Object.keys(rawData).forEach(key => {\n                        if (this.$data[key] !== rawData[key]) {\n                            this.$data[key] = rawData[key]\n                        }\n                    })\n                }\n\n                if (mutations[i].addedNodes.length > 0) {\n                    mutations[i].addedNodes.forEach(node => {\n                        if (node.nodeType !== 1) return\n\n                        if (node.matches('[x-data]')) {\n                            node.__x = new Component(node)\n                            return\n                        }\n\n                        this.initializeElements(node)\n                    })\n                }\n              }\n        })\n\n        observer.observe(targetNode, observerOptions);\n    }\n\n    getRefsProxy() {\n        var self = this\n\n        // One of the goals of this is to not hold elements in memory, but rather re-evaluate\n        // the DOM when the system needs something from it. This way, the framework is flexible and\n        // friendly to outside DOM changes from libraries like Vue/Livewire.\n        // For this reason, I'm using an \"on-demand\" proxy to fake a \"$refs\" object.\n        return new Proxy({}, {\n            get(object, property) {\n                if (property === '$isRefsProxy') return true\n\n                var ref\n\n                // We can't just query the DOM because it's hard to filter out refs in\n                // nested components.\n                self.walkAndSkipNestedComponents(self.$el, el => {\n                    if (el.hasAttribute('x-ref') && el.getAttribute('x-ref') === property) {\n                        ref = el\n                    }\n                })\n\n                return ref\n            }\n        })\n    }\n}\n","import { transitionIn, transitionOut } from '../utils'\n\nexport function handleShowDirective(el, value, initialUpdate = false) {\n    if (! value) {\n        transitionOut(el, () => {\n            el.style.display = 'none'\n        }, initialUpdate)\n    } else {\n        transitionIn(el, () => {\n            if (el.style.length === 1 && el.style.display !== '') {\n                el.removeAttribute('style')\n            } else {\n                el.style.removeProperty('display')\n            }\n        }, initialUpdate)\n    }\n}\n","import { transitionIn, transitionOut } from '../utils'\n\nexport function handleIfDirective(el, expressionResult, initialUpdate) {\n    if (el.nodeName.toLowerCase() !== 'template') console.warn(`Alpine: [x-if] directive should only be added to <template> tags. See https://github.com/alpinejs/alpine#x-if`)\n\n    const elementHasAlreadyBeenAdded = el.nextElementSibling && el.nextElementSibling.__x_inserted_me === true\n\n    if (expressionResult && ! elementHasAlreadyBeenAdded) {\n        const clone = document.importNode(el.content, true);\n\n        el.parentElement.insertBefore(clone, el.nextElementSibling)\n\n        el.nextElementSibling.__x_inserted_me = true\n\n        transitionIn(el.nextElementSibling, () => {}, initialUpdate)\n    } else if (! expressionResult && elementHasAlreadyBeenAdded) {\n        transitionOut(el.nextElementSibling, () => {\n            el.nextElementSibling.remove()\n        }, initialUpdate)\n    }\n}\n","import Component from './component'\nimport { domReady, isTesting } from './utils'\n\nconst Alpine = {\n    start: async function () {\n        if (! isTesting()) {\n            await domReady()\n        }\n\n        this.discoverComponents(el => {\n            this.initializeComponent(el)\n        })\n\n        // It's easier and more performant to just support Turbolinks than listen\n        // to MutationOberserver mutations at the document level.\n        document.addEventListener(\"turbolinks:load\", () => {\n            this.discoverUninitializedComponents(el => {\n                this.initializeComponent(el)\n            })\n        })\n\n        this.listenForNewUninitializedComponentsAtRunTime(el => {\n            this.initializeComponent(el)\n        })\n    },\n\n    discoverComponents: function (callback) {\n        const rootEls = document.querySelectorAll('[x-data]');\n\n        rootEls.forEach(rootEl => {\n            callback(rootEl)\n        })\n    },\n\n    discoverUninitializedComponents: function (callback, el = null) {\n        const rootEls = (el || document).querySelectorAll('[x-data]');\n\n        Array.from(rootEls)\n            .filter(el => el.__x === undefined)\n            .forEach(rootEl => {\n                callback(rootEl)\n            })\n    },\n\n    listenForNewUninitializedComponentsAtRunTime: function (callback) {\n        const targetNode = document.querySelector('body');\n\n        const observerOptions = {\n            childList: true,\n            attributes: true,\n            subtree: true,\n        }\n\n        const observer = new MutationObserver((mutations) => {\n            for (let i=0; i < mutations.length; i++){\n                if (mutations[i].addedNodes.length > 0) {\n                    mutations[i].addedNodes.forEach(node => {\n                        // Discard non-element nodes (like line-breaks)\n                        if (node.nodeType !== 1) return\n\n                        // Discard any changes happening within an existing component.\n                        // They will take care of themselves.\n                        if (node.parentElement && node.parentElement.closest('[x-data]')) return\n\n                        this.discoverUninitializedComponents((el) => {\n                            this.initializeComponent(el)\n                        }, node.parentElement)\n                    })\n                }\n              }\n        })\n\n        observer.observe(targetNode, observerOptions)\n    },\n\n    initializeComponent: function (el) {\n        if (! el.__x) {\n            el.__x = new Component(el)\n        }\n    }\n}\n\nif (! isTesting()) {\n    window.Alpine = Alpine\n    window.Alpine.start()\n}\n\nexport default Alpine\n"],"names":["arrayUnique","array","a","concat","i","length","j","splice","isTesting","navigator","userAgent","includes","debounce","func","wait","timeout","context","this","args","arguments","later","apply","clearTimeout","setTimeout","saferEval","expression","dataContext","additionalHelperVariables","Function","Object","keys","values","saferEvalNoReturn","isXAttr","attr","name","replaceAtAndColonWithStandardSyntax","test","getXAttrs","el","type","Array","from","attributes","filter","map","typeMatch","match","valueMatch","modifiers","value","replace","startsWith","transitionIn","callback","forceSkip","attrs","transition","find","split","transitionOut","classesDuring","classesStart","classesEnd","hook1","hook2","originalClasses","__x_original_classes","classList","add","requestAnimationFrame","duration","Number","getComputedStyle","transitionDuration","remove","isConnected","handleForDirective","component","initialUpdate","single","bunch","iterator1","iterator2","forIteratorRE","inMatch","res","trim","iteratorMatch","parseFor","items","evaluateReturnExpression","previousEl","forEach","index","group","currentKey","keyAttr","keyAliases","getThisIterationsKeyFromTemplateTag","currentEl","nextElementSibling","undefined","__x_for_key","tmpCurrentEl","parentElement","insertBefore","__x_for_alias","__x_for_value","updateElements","clone","document","importNode","content","initializeElements","nextElementFromOldLoop","nextElementFromOldLoopImmutable","nextSibling","handleAttributeBindingDirective","attrName","extraVars","checked","isArray","valueFound","val","tagName","arrayWrappedValue","options","option","selected","text","updateSelect","setAttribute","join","classNames","className","newClasses","removeAttribute","registerListener","event","handler","e","contains","target","offsetWidth","offsetHeight","runListenerHandler","removeEventListener","addEventListener","listenerTarget","window","isKeyEvent","keyModifiers","keyToModifier","key","selectedSystemKeyModifiers","modifier","isListeningForASpecificKeyThatHasntBeenPressed","preventDefault","stopPropagation","evaluateCommandExpression","toLowerCase","generateModelAssignmentFunction","hasAttribute","currentValue","CustomEvent","detail","multiple","selectedOptions","parseFloat","Component","constructor","$el","dataAttr","getAttribute","dataExpression","initExpression","createdExpression","mountedExpression","unobservedData","initReturnedCallback","$data","wrapDataInObservable","$refs","getRefsProxy","nextTickStack","$nextTick","push","pauseReactivity","console","warn","listenForNewElementsToInitialize","call","data","self","proxyHandler","set","obj","property","setWasSuccessful","Reflect","shift","get","$isRefsProxy","Node","Proxy","deleteProperty","deleteWasSuccessful","walkAndSkipNestedComponents","initializeComponentCallback","walk","node","firstElementChild","isSameNode","__x","rootEl","initializeElement","registerListeners","resolveBoundAttributes","updateElement","rightSideOfExpression","registerModelListener","output","innerText","innerHTML","style","display","removeProperty","handleShowDirective","expressionResult","nodeName","elementHasAlreadyBeenAdded","__x_inserted_me","handleIfDirective","$dispatch","getDispatchFunction","dispatchEvent","bubbles","targetNode","MutationObserver","mutations","closestParentComponent","closest","attributeName","rawData","addedNodes","nodeType","matches","observe","childList","subtree","object","ref","Alpine","start","async","Promise","resolve","readyState","discoverComponents","initializeComponent","discoverUninitializedComponents","listenForNewUninitializedComponentsAtRunTime","querySelectorAll","rootEls","querySelector"],"mappings":"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"}